{"version":3,"sources":["../src/utils.js"],"names":["childProcess","require","fs","waitStream","stream","Promise","resolve","on","cachePackageJson","utils","execSync","cmd","stdout","toString","isError","e","stderr","exec","reject","child","chunk","err","code","signal","readNpmVersion","name","result","ind","indexOf","substr","length","split","checkExistsNpm","JSON","parse","readFileSync","dependencies","devDependencies","module","exports"],"mappings":"AAAA;;;;AAGA,MAAMA,eAAeC,QAAQ,eAAR,CAArB;AACA,MAAMC,KAAKD,QAAQ,IAAR,CAAX;;AAEA,MAAME,aAAaC,UAAU,IAAIC,OAAJ,CAAYC,WAAW;AAChDF,WAAOG,EAAP,CAAU,KAAV,EAAiB,MAAMD,SAAvB;AACH,CAF4B,CAA7B;;AAIA,IAAIE,mBAAmB,IAAvB;;AAEA,MAAMC,QAAQ;AACVC,cAAWC,GAAD,IAAiB;AACvB,YAAI;AACA,kBAAMC,SAASZ,aAAaU,QAAb,CAAsBC,GAAtB,EAA2BE,QAA3B,CAAoC,OAApC,CAAf;AACA,mBAAO,EAACC,SAAS,KAAV,EAAiBF,MAAjB,EAAP;AACH,SAHD,CAGE,OAAOG,CAAP,EAAU;AACR,kBAAMH,SAASG,EAAEH,MAAF,CAASC,QAAT,CAAkB,OAAlB,CAAf;AACA,kBAAMG,SAASD,EAAEC,MAAF,CAASH,QAAT,CAAkB,OAAlB,CAAf;AACA,mBAAO,EAACC,SAAS,IAAV,EAAgBF,MAAhB,EAAwBI,MAAxB,EAAP;AACH;AACJ,KAVS;AAWVC,UAAON,GAAD,IAAiB,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUY,MAAV,KAAqB;AACpD,cAAMC,QAAQnB,aAAaiB,IAAb,CAAkBN,GAAlB,CAAd;;AAEA,YAAIC,SAAS,EAAb;AACA,YAAII,SAAS,EAAb;;AAEAG,cAAMP,MAAN,CAAaL,EAAb,CAAgB,MAAhB,EAAwBa,SAAS;AAC7BR,sBAAUQ,MAAMP,QAAN,EAAV;AACH,SAFD;;AAIAM,cAAMH,MAAN,CAAaT,EAAb,CAAgB,MAAhB,EAAwBa,SAAS;AAC7BJ,sBAAUI,MAAMP,QAAN,EAAV;AACH,SAFD;;AAIAM,cAAMZ,EAAN,CAAS,OAAT,EAAkBc,OAAO;AACrBH,mBAAOG,GAAP;AACH,SAFD;AAGAF,cAAMZ,EAAN,CAAS,MAAT;AAAA,yCAAiB,WAAOe,IAAP,EAAaC,MAAb,EAAwB;AACrC;AACA;AACAjB,wBAAQ,EAACgB,IAAD,EAAOV,MAAP,EAAeI,MAAf,EAAR;AACH,aAJD;;AAAA;AAAA;AAAA;AAAA;AAKH,KAtBsB,CAXb;AAkCVQ,oBAAiBC,IAAD,IAAkB;AAC9B,cAAMC,SAAS1B,aAAaU,QAAb,CAAsB,oBAAtB,EAA4CG,QAA5C,EAAf;AACA,cAAMc,MAAMD,OAAOE,OAAP,CAAgB,GAAEH,IAAK,GAAvB,CAAZ;AACA,YAAIE,QAAQ,CAAC,CAAb,EAAgB;AACZ,mBAAOD,OAAOG,MAAP,CAAcF,MAAMF,KAAKK,MAAX,GAAoB,CAAlC,EAAqCC,KAArC,CAA2C,IAA3C,EAAiD,CAAjD,CAAP;AACH,SAFD,MAEO;AACH,mBAAO,IAAP;AACH;AACJ,KA1CS;AA2CVC,oBAAiBP,IAAD,IAAkB;AAC9B,YAAI,CAACjB,gBAAL,EAAuB;AACnB,gBAAI;AACAA,mCAAmByB,KAAKC,KAAL,CAAWhC,GAAGiC,YAAH,CAAgB,cAAhB,EAAgCtB,QAAhC,EAAX,CAAnB;AACH,aAFD,CAEE,OAAOE,CAAP,EAAU;AACR,uBAAO,KAAP;AACH;AACJ;;AAED,YAAIP,iBAAiB4B,YAAjB,IAAiC5B,iBAAiB4B,YAAjB,CAA8BX,IAA9B,CAArC,EAA0E;AACtE,mBAAO,IAAP;AACH;;AAED,YAAIjB,iBAAiB6B,eAAjB,IAAoC7B,iBAAiB6B,eAAjB,CAAiCZ,IAAjC,CAAxC,EAAgF;AAC5E,mBAAO,IAAP;AACH;AACD,eAAO,KAAP;AACH;AA5DS,CAAd;;AA+DAa,OAAOC,OAAP,GAAiB9B,KAAjB","file":"utils.js","sourcesContent":["'use strict'\n// @flow\n\nconst childProcess = require('child_process')\nconst fs = require('fs')\n\nconst waitStream = stream => new Promise(resolve => {\n    stream.on('end', () => resolve())\n})\n\nlet cachePackageJson = null\n\nconst utils = {\n    execSync: (cmd: string) => {\n        try {\n            const stdout = childProcess.execSync(cmd).toString('utf-8')\n            return {isError: false, stdout}\n        } catch (e) {\n            const stdout = e.stdout.toString('utf-8')\n            const stderr = e.stderr.toString('utf-8')\n            return {isError: true, stdout, stderr}\n        }\n    },\n    exec: (cmd: string) => new Promise((resolve, reject) => {\n        const child = childProcess.exec(cmd)\n\n        let stdout = ''\n        let stderr = ''\n\n        child.stdout.on('data', chunk => {\n            stdout += chunk.toString()\n        })\n\n        child.stderr.on('data', chunk => {\n            stderr += chunk.toString()\n        })\n\n        child.on('error', err => {\n            reject(err)\n        })\n        child.on('exit', async (code, signal) => {\n            // await waitStream(child.stdout)\n            // await waitStream(child.stderr)\n            resolve({code, stdout, stderr})\n        })\n    }),\n    readNpmVersion: (name: string) => {\n        const result = childProcess.execSync('npm list --depth=0').toString()\n        const ind = result.indexOf(`${name}@`)\n        if (ind !== -1) {\n            return result.substr(ind + name.length + 1).split('\\n')[0]\n        } else {\n            return null\n        }\n    },\n    checkExistsNpm: (name: string) => {\n        if (!cachePackageJson) {\n            try {\n                cachePackageJson = JSON.parse(fs.readFileSync('package.json').toString())\n            } catch (e) {\n                return false\n            }\n        }\n\n        if (cachePackageJson.dependencies && cachePackageJson.dependencies[name]) {\n            return true\n        }\n\n        if (cachePackageJson.devDependencies && cachePackageJson.devDependencies[name]) {\n            return true\n        }\n        return false\n    }\n}\n\nmodule.exports = utils\n"]}