{"version":3,"sources":["../../../src/plugins/webpack/installer.js"],"names":["require","utils","getConfig","config","WebpackInstaller","operator","values","getLocal","rules","test","use","found","findIndex","value","forEach","loader","options","find","push","exclude","writeLocal","addBuilder","getInstaller","jsInstaller","addDevPackage","module","exports"],"mappings":"AAAA;;;;;;;;eAE2BA,QAAQ,kBAAR,C;IAApBC,K,YAAAA,K;IAAOC,S,YAAAA,S;;AACd,IAAMC,SAASD,WAAf;;IAEME,gB;AACF,8BAAYC,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAKC,MAAL,GAAcH,OAAOI,QAAP,CAAgB,SAAhB,KAA8B,EAACC,OAAO,EAAR,EAA5C;AACH;;;;kCAMSC,I,EAAMC,G,EAAK;AAAA;;AACjB,gBAAMC,QAAQ,KAAKL,MAAL,CAAYE,KAAZ,CAAkBI,SAAlB,CAA4B;AAAA,uBAASC,MAAMJ,IAAN,KAAeA,IAAxB;AAAA,aAA5B,CAAd;AACA,gBAAIE,UAAU,CAAC,CAAf,EAAkB;AACdD,oBAAII,OAAJ,CAAY,gBAAuB;AAAA,wBAArBC,MAAqB,QAArBA,MAAqB;AAAA,wBAAbC,OAAa,QAAbA,OAAa;;AAC/B,wBAAI,CAAC,MAAKV,MAAL,CAAYE,KAAZ,CAAkBG,KAAlB,EAAyBD,GAAzB,CAA6BO,IAA7B,CAAkC;AAAA,+BAASJ,MAAME,MAAN,KAAiBA,MAA1B;AAAA,qBAAlC,CAAL,EAA0E;AACtE,8BAAKT,MAAL,CAAYE,KAAZ,CAAkBG,KAAlB,EAAyBD,GAAzB,CAA6BQ,IAA7B,CAAkC,EAACH,cAAD,EAASC,gBAAT,EAAkBG,SAAS,cAA3B,EAAlC;AACH;AACJ,iBAJD;;AAMA;AACH;AACD,iBAAKb,MAAL,CAAYE,KAAZ,CAAkBU,IAAlB,CAAuB,EAACT,UAAD,EAAOC,QAAP,EAAvB;AACAR,wBAAYkB,UAAZ,CAAuB,SAAvB,EAAkC,KAAKd,MAAvC;AACH;;;;;;;;;;AAGG,qCAAKD,QAAL,CAAcgB,UAAd,CAAyB,SAAzB;;uCAC0B,KAAKhB,QAAL,CAAciB,YAAd,CAA2B,IAA3B,C;;;AAApBC,2C;;AACNA,4CAAYC,aAAZ,CAA0B,SAA1B;AACAD,4CAAYC,aAAZ,CAA0B,cAA1B;;;;;;;;;;;;;;;;;;qCAvBgBnB,Q,EAAU;AAC1B,mBAAO,IAAI,IAAJ,CAASA,QAAT,CAAP;AACH;;;;;;AAyBLoB,OAAOC,OAAP,GAAiBtB,gBAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nconst {utils, getConfig} = require('../../waterslide')\nconst config = getConfig()\n\nclass WebpackInstaller {\n    constructor(operator) {\n        this.operator = operator\n        this.values = config.getLocal('webpack') || {rules: []}\n    }\n\n    static getInstaller(operator) {\n        return new this(operator)\n    }\n\n    addLoader(test, use) {\n        const found = this.values.rules.findIndex(value => value.test === test)\n        if (found !== -1) {\n            use.forEach(({loader, options}) => {\n                if (!this.values.rules[found].use.find(value => value.loader === loader)) {\n                    this.values.rules[found].use.push({loader, options, exclude: 'node_modules'})\n                }\n            })\n\n            return\n        }\n        this.values.rules.push({test, use})\n        getConfig().writeLocal('webpack', this.values)\n    }\n\n    async install() {\n        this.operator.addBuilder('webpack')\n        const jsInstaller = await this.operator.getInstaller('js')\n        jsInstaller.addDevPackage('webpack')\n        jsInstaller.addDevPackage('babel-loader')\n    }\n}\n\nmodule.exports = WebpackInstaller\n"]}