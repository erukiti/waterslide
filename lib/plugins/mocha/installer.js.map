{"version":3,"sources":["../../../src/plugins/mocha/installer.js"],"names":["fs","require","path","utils","MochaInstaller","constructor","operator","getInstaller","checkExistsNpm","checkExists","install","mochaOptsText","readFileSync","join","__dirname","testJs","jsInstaller","addDevPackage","addTester","writeFile","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,MAAM,EAACE,KAAD,KAAUF,QAAQ,kBAAR,CAAhB;;AAEA,MAAMG,cAAN,CAAqB;AACjBC,gBAAYC,QAAZ,EAAsB;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAED,WAAaC,YAAb,CAA0BD,QAA1B,EAAoC;AAAA;;AAAA;AAChC,gBAAIH,MAAMK,cAAN,CAAqB,OAArB,MACG,MAAMF,SAASG,WAAT,CAAqB,iBAArB,CADT,MAEG,MAAMH,SAASG,WAAT,CAAqB,qBAArB,CAFT,MAGG,MAAMH,SAASG,WAAT,CAAqB,cAArB,CAHT,CAAJ,EAIE;AACE,uBAAO,IAAP;AACH;;AAED,mBAAO,UAASH,QAAT,CAAP;AATgC;AAUnC;;AAEKI,WAAN,GAAgB;AAAA;;AAAA;AACZ,kBAAMC,gBAAgBX,GAAGY,YAAH,CAAgBV,KAAKW,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAhB,CAAtB;AACA,kBAAMC,SAASf,GAAGY,YAAH,CAAgBV,KAAKW,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAhB,CAAf;;AAEA,kBAAM,OAAKR,QAAL,CAAcC,YAAd,CAA2B,cAA3B,CAAN;;AAEA,kBAAMS,cAAc,MAAM,OAAKV,QAAL,CAAcC,YAAd,CAA2B,IAA3B,CAA1B;AACAS,wBAAYC,aAAZ,CAA0B,OAA1B;AACA,mBAAKX,QAAL,CAAcY,SAAd,CAAwB,OAAxB;;AAEA,kBAAM,OAAKZ,QAAL,CAAca,SAAd,CAAwB,iBAAxB,EAA2CR,aAA3C,CAAN;AACA,kBAAM,OAAKL,QAAL,CAAca,SAAd,CAAwB,cAAxB,EAAwCJ,MAAxC,CAAN;AAXY;AAYf;AA7BgB;;AAgCrBK,OAAOC,OAAP,GAAiBjB,cAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nconst fs = require('fs')\nconst path = require('path')\n\nconst {utils} = require('../../waterslide')\n\nclass MochaInstaller {\n    constructor(operator) {\n        this.operator = operator\n    }\n\n    static async getInstaller(operator) {\n        if (utils.checkExistsNpm('mocha')\n            || await operator.checkExists('test/mocha.opts')\n            || await operator.checkExists('test/test-helper.js')\n            || await operator.checkExists('test/test.js')\n        ) {\n            return null\n        }\n\n        return new this(operator)\n    }\n\n    async install() {\n        const mochaOptsText = fs.readFileSync(path.join(__dirname, 'mocha.opts'))\n        const testJs = fs.readFileSync(path.join(__dirname, 'sample.js'))\n\n        await this.operator.getInstaller('power-assert')\n\n        const jsInstaller = await this.operator.getInstaller('js')\n        jsInstaller.addDevPackage('mocha')\n        this.operator.addTester('mocha')\n\n        await this.operator.writeFile('test/mocha.opts', mochaOptsText)\n        await this.operator.writeFile('test/test.js', testJs)\n    }\n}\n\nmodule.exports = MochaInstaller\n"]}