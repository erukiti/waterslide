{"version":3,"sources":["../../../src/plugins/git/installer.js"],"names":["GithubApi","require","fs","path","utils","getConfig","GitInstaller","operator","ignoreFiles","config","token","getGlobal","push","githubRepository","githubRepositoryUrl","githubUsername","githubUser","createRepo","name","private","catch","console","dir","err","addCommand","writeFile","join","existsSync","getProjectDir","log","process","exit","e","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,YAAYC,QAAQ,YAAR,CAAlB;AACA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;;eAC2BA,QAAQ,kBAAR,C;IAApBG,K,YAAAA,K;IAAOC,S,YAAAA,S;;IAERC,Y;AACF,0BAAYC,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAKC,WAAL,GAAmB,CAAC,eAAD,EAAkB,eAAlB,EAAmC,QAAnC,CAAnB;;AAEA,YAAMC,SAASJ,WAAf;AACA,aAAKK,KAAL,GAAaD,OAAOE,SAAP,CAAiB,cAAjB,CAAb;AACH;;;;kCAaSR,I,EAAM;AACZ,iBAAKK,WAAL,CAAiBI,IAAjB,CAAsBT,IAAtB;AACH;;;8CAEqB;AAClB,mBAAO,KAAKU,gBAAZ;AACH;;;iDAEwB;AACrB,mBAAO,KAAKC,mBAAZ;AACH;;;4CAEmB;AAChB,mBAAO,KAAKC,cAAZ;AACH;;;;;;;;;AAGG,oCAAI,KAAKC,UAAT,EAAqB;AACjB,yCAAKA,UAAL,CAAgBC,UAAhB,CAA2B;AACvBC,8CAAM,KAAKL,gBADY;AAEvBM,iDAAS;AAFc,qCAA3B,EAGGC,KAHH,CAGS;AAAA,+CAAOC,QAAQC,GAAR,CAAYC,GAAZ,CAAP;AAAA,qCAHT;AAIH;;AAED,qCAAKhB,QAAL,CAAciB,UAAd,CAAyB,CAAzB,EAA4B,UAA5B;AACA,qCAAKjB,QAAL,CAAciB,UAAd,CAAyB,CAAzB,EAA4B,WAA5B;AACA,qCAAKjB,QAAL,CAAciB,UAAd,CAAyB,CAAzB,EAA4B,4FAA5B;;;uCAEM,KAAKjB,QAAL,CAAckB,SAAd,CAAwB,YAAxB,EAAsC,KAAKjB,WAAL,CAAiBkB,IAAjB,CAAsB,IAAtB,CAAtC,C;;;;;;;;;;;;;;;;;;;oFAvCgBnB,Q;;;;;AACtB,oCAAI;AACAL,uCAAGyB,UAAH,CAAcxB,KAAKuB,IAAL,CAAU,KAAKnB,QAAL,CAAcqB,aAAd,EAAV,EAAyC,MAAzC,CAAd;AACAP,4CAAQQ,GAAR,CAAY,kBAAZ;AACAC,4CAAQC,IAAR,CAAa,CAAb;AACH,iCAJD,CAIE,OAAOC,CAAP,EAAU;AACR;AACH;kEACM,IAAI,IAAJ,CAASzB,QAAT,C;;;;;;;;;;;;;;;;;;;;;AAmCf0B,OAAOC,OAAP,GAAiB5B,YAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nconst GithubApi = require('github-api')\nconst fs = require('fs')\nconst path = require('path')\nconst {utils, getConfig} = require('../../waterslide')\n\nclass GitInstaller {\n    constructor(operator) {\n        this.operator = operator\n        this.ignoreFiles = ['node_modules/', 'npm-debug.log', 'build/']\n\n        const config = getConfig()\n        this.token = config.getGlobal('github_token')\n    }\n\n    static async getInstaller(operator) {\n        try {\n            fs.existsSync(path.join(this.operator.getProjectDir(), '.git'))\n            console.log('alread installed')\n            process.exit(1)\n        } catch (e) {\n            //\n        }\n        return new this(operator)\n    }\n\n    addIgnore(path) {\n        this.ignoreFiles.push(path)\n    }\n\n    getGithubRepository() {\n        return this.githubRepository\n    }\n\n    getGithubRepositoryUrl() {\n        return this.githubRepositoryUrl\n    }\n\n    getGithubUsername() {\n        return this.githubUsername\n    }\n\n    async install() {\n        if (this.githubUser) {\n            this.githubUser.createRepo({\n                name: this.githubRepository,\n                private: true\n            }).catch(err => console.dir(err))\n        }\n\n        this.operator.addCommand(9, 'git init')\n        this.operator.addCommand(9, 'git add .')\n        this.operator.addCommand(9, 'git commit -m \\'first commited by waterslide. see. http://github.com/erukiti/waterslide/\\'')\n\n        await this.operator.writeFile('.gitignore', this.ignoreFiles.join('\\n'))\n    }\n}\n\nmodule.exports = GitInstaller\n"]}