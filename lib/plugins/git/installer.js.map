{"version":3,"sources":["../../../src/plugins/git/installer.js"],"names":["GithubApi","require","utils","getConfig","GitInstaller","constructor","operator","ignoreFiles","config","token","getGlobal","getInstaller","code","stdout","stderr","exec","catch","console","dir","e","indexOf","addIgnore","path","push","getGithubRepository","githubRepository","getGithubRepositoryUrl","githubRepositoryUrl","getGithubUsername","githubUsername","install","githubUser","createRepo","name","private","err","addCommand","writeFile","join","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,YAAYC,QAAQ,YAAR,CAAlB;;AAEA,MAAM,EAACC,KAAD,EAAQC,SAAR,KAAqBF,QAAQ,kBAAR,CAA3B;;AAEA,MAAMG,YAAN,CAAmB;AACfC,gBAAYC,QAAZ,EAAsB;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAKC,WAAL,GAAmB,CAAC,eAAD,EAAkB,eAAlB,EAAmC,QAAnC,CAAnB;;AAEA,cAAMC,SAASL,WAAf;AACA,aAAKM,KAAL,GAAaD,OAAOE,SAAP,CAAiB,cAAjB,CAAb;AACH;;AAED,WAAaC,YAAb,CAA0BL,QAA1B,EAAoC;AAAA;;AAAA;AAChC,kBAAM,EAACM,IAAD,EAAOC,MAAP,EAAeC,MAAf,KAAyB,MAAMZ,MAAMa,IAAN,CAAW,YAAX,EAAyBC,KAAzB,CAA+B;AAAA,uBAAKC,QAAQC,GAAR,CAAYC,CAAZ,CAAL;AAAA,aAA/B,CAArC;AACA,gBAAIL,OAAOM,OAAP,CAAe,6BAAf,MAAkD,CAAC,CAAvD,EAA0D;AACtD,uBAAO,IAAP;AACH;;AAED,mBAAO,UAASd,QAAT,CAAP;AANgC;AAOnC;;AAEDe,cAAUC,IAAV,EAAgB;AACZ,aAAKf,WAAL,CAAiBgB,IAAjB,CAAsBD,IAAtB;AACH;;AAEDE,0BAAsB;AAClB,eAAO,KAAKC,gBAAZ;AACH;;AAEDC,6BAAyB;AACrB,eAAO,KAAKC,mBAAZ;AACH;;AAEDC,wBAAoB;AAChB,eAAO,KAAKC,cAAZ;AACH;;AAEKC,WAAN,GAAgB;AAAA;;AAAA;AACZ,gBAAI,OAAKC,UAAT,EAAqB;AACjB,uBAAKA,UAAL,CAAgBC,UAAhB,CAA2B;AACvBC,0BAAM,OAAKR,gBADY;AAEvBS,6BAAS;AAFc,iBAA3B,EAGGlB,KAHH,CAGS;AAAA,2BAAOC,QAAQC,GAAR,CAAYiB,GAAZ,CAAP;AAAA,iBAHT;AAIH;;AAED,mBAAK7B,QAAL,CAAc8B,UAAd,CAAyB,CAAzB,EAA4B,UAA5B;AACA,mBAAK9B,QAAL,CAAc8B,UAAd,CAAyB,CAAzB,EAA4B,WAA5B;AACA,mBAAK9B,QAAL,CAAc8B,UAAd,CAAyB,CAAzB,EAA4B,4FAA5B;;AAEA,kBAAM,OAAK9B,QAAL,CAAc+B,SAAd,CAAwB,YAAxB,EAAsC,OAAK9B,WAAL,CAAiB+B,IAAjB,CAAsB,IAAtB,CAAtC,CAAN;AAZY;AAaf;AA/Cc;;AAkDnBC,OAAOC,OAAP,GAAiBpC,YAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nconst GithubApi = require('github-api')\n\nconst {utils, getConfig} = require('../../waterslide')\n\nclass GitInstaller {\n    constructor(operator) {\n        this.operator = operator\n        this.ignoreFiles = ['node_modules/', 'npm-debug.log', 'build/']\n\n        const config = getConfig()\n        this.token = config.getGlobal('github_token')\n    }\n\n    static async getInstaller(operator) {\n        const {code, stdout, stderr} = await utils.exec('git status').catch(e => console.dir(e))\n        if (stderr.indexOf('fatal: Not a git repository') === -1) {\n            return null\n        }\n\n        return new this(operator)\n    }\n\n    addIgnore(path) {\n        this.ignoreFiles.push(path)\n    }\n\n    getGithubRepository() {\n        return this.githubRepository\n    }\n\n    getGithubRepositoryUrl() {\n        return this.githubRepositoryUrl\n    }\n\n    getGithubUsername() {\n        return this.githubUsername\n    }\n\n    async install() {\n        if (this.githubUser) {\n            this.githubUser.createRepo({\n                name: this.githubRepository,\n                private: true\n            }).catch(err => console.dir(err))\n        }\n\n        this.operator.addCommand(9, 'git init')\n        this.operator.addCommand(9, 'git add .')\n        this.operator.addCommand(9, 'git commit -m \\'first commited by waterslide. see. http://github.com/erukiti/waterslide/\\'')\n\n        await this.operator.writeFile('.gitignore', this.ignoreFiles.join('\\n'))\n    }\n}\n\nmodule.exports = GitInstaller\n"]}