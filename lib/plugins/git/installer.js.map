{"version":3,"sources":["../../../src/plugins/git/installer.js"],"names":["GithubApi","require","fs","path","utils","getConfig","GitInstaller","constructor","operator","ignoreFiles","config","token","getGlobal","getInstaller","existsSync","join","getProjectDir","console","log","process","exit","e","addIgnore","push","getGithubRepository","githubRepository","getGithubRepositoryUrl","githubRepositoryUrl","getGithubUsername","githubUsername","install","githubUser","createRepo","name","private","catch","dir","err","addCommand","writeFile","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,YAAYC,QAAQ,YAAR,CAAlB;AACA,MAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,MAAM,EAACG,KAAD,EAAQC,SAAR,KAAqBJ,QAAQ,kBAAR,CAA3B;;AAEA,MAAMK,YAAN,CAAmB;AACfC,gBAAYC,QAAZ,EAAsB;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAKC,WAAL,GAAmB,CAAC,eAAD,EAAkB,eAAlB,EAAmC,QAAnC,CAAnB;;AAEA,cAAMC,SAASL,WAAf;AACA,aAAKM,KAAL,GAAaD,OAAOE,SAAP,CAAiB,cAAjB,CAAb;AACH;;AAED,WAAaC,YAAb,CAA0BL,QAA1B,EAAoC;AAAA;;AAAA;AAChC,gBAAI;AACAN,mBAAGY,UAAH,CAAcX,KAAKY,IAAL,CAAU,MAAKP,QAAL,CAAcQ,aAAd,EAAV,EAAyC,MAAzC,CAAd;AACAC,wBAAQC,GAAR,CAAY,kBAAZ;AACAC,wBAAQC,IAAR,CAAa,CAAb;AACH,aAJD,CAIE,OAAOC,CAAP,EAAU;AACR;AACH;AACD,mBAAO,UAASb,QAAT,CAAP;AARgC;AASnC;;AAEDc,cAAUnB,IAAV,EAAgB;AACZ,aAAKM,WAAL,CAAiBc,IAAjB,CAAsBpB,IAAtB;AACH;;AAEDqB,0BAAsB;AAClB,eAAO,KAAKC,gBAAZ;AACH;;AAEDC,6BAAyB;AACrB,eAAO,KAAKC,mBAAZ;AACH;;AAEDC,wBAAoB;AAChB,eAAO,KAAKC,cAAZ;AACH;;AAEKC,WAAN,GAAgB;AAAA;;AAAA;AACZ,gBAAI,OAAKC,UAAT,EAAqB;AACjB,uBAAKA,UAAL,CAAgBC,UAAhB,CAA2B;AACvBC,0BAAM,OAAKR,gBADY;AAEvBS,6BAAS;AAFc,iBAA3B,EAGGC,KAHH,CAGS;AAAA,2BAAOlB,QAAQmB,GAAR,CAAYC,GAAZ,CAAP;AAAA,iBAHT;AAIH;;AAED,mBAAK7B,QAAL,CAAc8B,UAAd,CAAyB,CAAzB,EAA4B,UAA5B;AACA,mBAAK9B,QAAL,CAAc8B,UAAd,CAAyB,CAAzB,EAA4B,WAA5B;AACA,mBAAK9B,QAAL,CAAc8B,UAAd,CAAyB,CAAzB,EAA4B,4FAA5B;;AAEA,kBAAM,OAAK9B,QAAL,CAAc+B,SAAd,CAAwB,YAAxB,EAAsC,OAAK9B,WAAL,CAAiBM,IAAjB,CAAsB,IAAtB,CAAtC,CAAN;AAZY;AAaf;AAjDc;;AAoDnByB,OAAOC,OAAP,GAAiBnC,YAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nconst GithubApi = require('github-api')\nconst fs = require('fs')\nconst path = require('path')\nconst {utils, getConfig} = require('../../waterslide')\n\nclass GitInstaller {\n    constructor(operator) {\n        this.operator = operator\n        this.ignoreFiles = ['node_modules/', 'npm-debug.log', 'build/']\n\n        const config = getConfig()\n        this.token = config.getGlobal('github_token')\n    }\n\n    static async getInstaller(operator) {\n        try {\n            fs.existsSync(path.join(this.operator.getProjectDir(), '.git'))\n            console.log('alread installed')\n            process.exit(1)\n        } catch (e) {\n            //\n        }\n        return new this(operator)\n    }\n\n    addIgnore(path) {\n        this.ignoreFiles.push(path)\n    }\n\n    getGithubRepository() {\n        return this.githubRepository\n    }\n\n    getGithubRepositoryUrl() {\n        return this.githubRepositoryUrl\n    }\n\n    getGithubUsername() {\n        return this.githubUsername\n    }\n\n    async install() {\n        if (this.githubUser) {\n            this.githubUser.createRepo({\n                name: this.githubRepository,\n                private: true\n            }).catch(err => console.dir(err))\n        }\n\n        this.operator.addCommand(9, 'git init')\n        this.operator.addCommand(9, 'git add .')\n        this.operator.addCommand(9, 'git commit -m \\'first commited by waterslide. see. http://github.com/erukiti/waterslide/\\'')\n\n        await this.operator.writeFile('.gitignore', this.ignoreFiles.join('\\n'))\n    }\n}\n\nmodule.exports = GitInstaller\n"]}