{"version":3,"sources":["../../../src/plugins/bin/generator.js"],"names":["fs","require","path","BinGenerator","operator","name","opts","binText","readFileSync","join","__dirname","writeFile","mode","getInstaller","jsInstaller","addBin","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;IAEME,Y;AACF,0BAAYC,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACH;;;;;kFAEcC,I;oBAAMC,I,uEAAO,E;;;;;;AAClBC,uC,GAAUP,GAAGQ,YAAH,CAAgBN,KAAKO,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAhB,C;;AAChB,qCAAKN,QAAL,CAAcO,SAAd,UAA+BN,IAA/B,EAAuCE,OAAvC,EAAgD,EAACK,MAAM,GAAP,EAAhD;;;uCAE0B,KAAKR,QAAL,CAAcS,YAAd,CAA2B,IAA3B,C;;;AAApBC,2C;;AACNA,4CAAYC,MAAZ,UAA0BV,IAA1B;;;;;;;;;;;;;;;;;;;;;AAIRW,OAAOC,OAAP,GAAiBd,YAAjB","file":"generator.js","sourcesContent":["'use strict'\n\nconst fs = require('fs')\nconst path = require('path')\n\nclass BinGenerator {\n    constructor(operator) {\n        this.operator = operator\n    }\n\n    async generate(name, opts = {}) {\n        const binText = fs.readFileSync(path.join(__dirname, 'sample.bin.js'))\n        this.operator.writeFile(`bin/${name}`, binText, {mode: 0o755})\n\n        const jsInstaller = await this.operator.getInstaller('js')\n        jsInstaller.addBin(`bin/${name}`)\n    }\n}\n\nmodule.exports = BinGenerator\n"]}