{"version":3,"sources":["../../../src/plugins/document/installer.js"],"names":["createReadme","projectDir","directoriesText","DocumentInstaller","constructor","operator","directories","getInstaller","checkExists","setDirectory","path","description","push","_getDirectoriesText","text","forEach","directory","install","postInstall","getProjectDir","writeFile","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,eAAe,CAACC,UAAD,EAAaC,eAAb,KACpB,KAAID,UAAW;;;;EAIdC,eAAgB;;CALlB;;AASA,MAAMC,iBAAN,CAAwB;AACpBC,gBAAYC,QAAZ,EAAsB;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACH;;AAED,WAAaC,YAAb,CAA0BF,QAA1B,EAAoC;AAAA;;AAAA;AAChC,gBAAI,MAAMA,SAASG,WAAT,CAAqB,WAArB,CAAV,EAA6C;AACzC,uBAAO,IAAP;AACH;;AAED,mBAAO,UAASH,QAAT,CAAP;AALgC;AAMnC;;AAEDI,iBAAaC,IAAb,EAAmBC,WAAnB,EAAgC;AAC5B,aAAKL,WAAL,CAAiBM,IAAjB,CAAsB,EAACF,IAAD,EAAOC,WAAP,EAAtB;AACH;;AAEDE,0BAAsB;AAClB,YAAIC,OAAO,+BAAX;AACAA,gBAAQ,+BAAR;AACA,aAAKR,WAAL,CAAiBS,OAAjB,CAAyBC,aAAa;AAClCF,oBAAS,KAAIE,UAAUN,IAAK,MAAKM,UAAUL,WAAY,MAAvD;AACH,SAFD;AAGA,eAAOG,IAAP;AACH;;AAEKG,WAAN,GAAgB;AAAA;;AAAA;AACZ,mBAAKZ,QAAL,CAAca,WAAd,mBAA0B,aAAY;AAClC,sBAAMJ,OAAOd,aAAa,OAAKK,QAAL,CAAcc,aAAd,EAAb,EAA4C,OAAKN,mBAAL,EAA5C,CAAb;AACA,sBAAM,OAAKR,QAAL,CAAce,SAAd,CAAwB,WAAxB,EAAqCN,IAArC,CAAN;AACH,aAHD;AADY;AAKf;AAhCmB;;AAmCxBO,OAAOC,OAAP,GAAiBnB,iBAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nconst createReadme = (projectDir, directoriesText) =>\n`# ${projectDir}\n\n## directories\n\n${directoriesText}\n\n`\n\nclass DocumentInstaller {\n    constructor(operator) {\n        this.operator = operator\n        this.directories = []\n    }\n\n    static async getInstaller(operator) {\n        if (await operator.checkExists('README.md')) {\n            return null\n        }\n\n        return new this(operator)\n    }\n\n    setDirectory(path, description) {\n        this.directories.push({path, description})\n    }\n\n    _getDirectoriesText() {\n        let text = '| directory | description |\\n'\n        text += '| --------- | ----------- |\\n'\n        this.directories.forEach(directory => {\n            text += `| ${directory.path} | ${directory.description} |\\n`\n        })\n        return text\n    }\n\n    async install() {\n        this.operator.postInstall(async () => {\n            const text = createReadme(this.operator.getProjectDir(), this._getDirectoriesText())\n            await this.operator.writeFile('README.md', text)\n        })\n    }\n}\n\nmodule.exports = DocumentInstaller\n"]}