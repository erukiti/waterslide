{"version":3,"sources":["../../../src/plugins/document/installer.js"],"names":["createReadme","projectDir","directoriesText","DocumentInstaller","operator","directories","path","description","push","text","forEach","directory","postInstall","getProjectDir","_getDirectoriesText","writeFile","checkExists","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAACC,UAAD,EAAaC,eAAb;AAAA,kBAChBD,UADgB,8BAKnBC,eALmB;AAAA,CAArB;;IASMC,iB;AACF,+BAAYC,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACH;;;;qCAUYC,I,EAAMC,W,EAAa;AAC5B,iBAAKF,WAAL,CAAiBG,IAAjB,CAAsB,EAACF,UAAD,EAAOC,wBAAP,EAAtB;AACH;;;8CAEqB;AAClB,gBAAIE,OAAO,+BAAX;AACAA,oBAAQ,+BAAR;AACA,iBAAKJ,WAAL,CAAiBK,OAAjB,CAAyB,qBAAa;AAClCD,+BAAaE,UAAUL,IAAvB,WAAiCK,UAAUJ,WAA3C;AACH,aAFD;AAGA,mBAAOE,IAAP;AACH;;;;;;;;;;;AAGG,qCAAKL,QAAL,CAAcQ,WAAd,2CAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBH,wDADgB,GACTT,aAAa,MAAKI,QAAL,CAAcS,aAAd,EAAb,EAA4C,MAAKC,mBAAL,EAA5C,CADS;AAAA;AAAA,2DAEhB,MAAKV,QAAL,CAAcW,SAAd,CAAwB,WAAxB,EAAqCN,IAArC,CAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA1B;;;;;;;;;;;;;;;;;;;oFAtBsBL,Q;;;;;;uCACZA,SAASY,WAAT,CAAqB,WAArB,C;;;;;;;;kEACC,I;;;kEAGJ,IAAI,IAAJ,CAASZ,QAAT,C;;;;;;;;;;;;;;;;;;;;;AAwBfa,OAAOC,OAAP,GAAiBf,iBAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nconst createReadme = (projectDir, directoriesText) =>\n`# ${projectDir}\n\n## directories\n\n${directoriesText}\n\n`\n\nclass DocumentInstaller {\n    constructor(operator) {\n        this.operator = operator\n        this.directories = []\n    }\n\n    static async getInstaller(operator) {\n        if (await operator.checkExists('README.md')) {\n            return null\n        }\n\n        return new this(operator)\n    }\n\n    setDirectory(path, description) {\n        this.directories.push({path, description})\n    }\n\n    _getDirectoriesText() {\n        let text = '| directory | description |\\n'\n        text += '| --------- | ----------- |\\n'\n        this.directories.forEach(directory => {\n            text += `| ${directory.path} | ${directory.description} |\\n`\n        })\n        return text\n    }\n\n    async install() {\n        this.operator.postInstall(async () => {\n            const text = createReadme(this.operator.getProjectDir(), this._getDirectoriesText())\n            await this.operator.writeFile('README.md', text)\n        })\n    }\n}\n\nmodule.exports = DocumentInstaller\n"]}