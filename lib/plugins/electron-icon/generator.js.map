{"version":3,"sources":["../../../src/plugins/electron-icon/generator.js"],"names":["fs","require","path","ElectronIconGenerator","operator","name","opts","getInstaller","src","readFileSync","join","__dirname","writeFile","type","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;IAEME,qB;AACF,mCAAYC,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACH;;;;;kFAEcC,I;oBAAMC,I,uEAAO,E;;;;;;;uCAClB,KAAKF,QAAL,CAAcG,YAAd,CAA2B,eAA3B,C;;;AAEAC,mC,GAAMR,GAAGS,YAAH,CAAgBP,KAAKQ,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAhB,C;;uCACN,KAAKP,QAAL,CAAcQ,SAAd,CAAwBP,IAAxB,EAA8BG,GAA9B,EAAmC,EAACK,MAAM,eAAP,EAAnC,C;;;;;;;;;;;;;;;;;;;;;AAIdC,OAAOC,OAAP,GAAiBZ,qBAAjB","file":"generator.js","sourcesContent":["'use strict'\n\nconst fs = require('fs')\nconst path = require('path')\n\nclass ElectronIconGenerator {\n    constructor(operator) {\n        this.operator = operator\n    }\n\n    async generate(name, opts = {}) {\n        await this.operator.getInstaller('electron-icon')\n\n        const src = fs.readFileSync(path.join(__dirname, 'sample.png'))\n        await this.operator.writeFile(name, src, {type: 'electron-icon'})\n    }\n}\n\nmodule.exports = ElectronIconGenerator\n"]}