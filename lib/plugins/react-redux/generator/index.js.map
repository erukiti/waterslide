{"version":3,"sources":["../../../../src/plugins/react-redux/generator/index.js"],"names":["fs","require","path","process","Mustache","ReactReduxGenerator","constructor","operator","generate","name","opts","toLower","s","charAt","toLowerCase","slice","toUpper","toUpperCase","createPrefix","split","map","v","join","upperPrefix","basename","lowerPrefix","obj","action","component","reducer","render","inFile","outFile","templ","readFileSync","__dirname","toString","content","writeFile","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,UAAUF,QAAQ,SAAR,CAAhB;AACA,MAAMG,WAAWH,QAAQ,UAAR,CAAjB;;AAEA,MAAMI,mBAAN,CAA0B;AACtBC,gBAAYC,QAAZ,EAAsB;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAEKC,YAAN,CAAeC,IAAf,EAAqBC,OAAO,EAA5B,EAAgC;AAAA;;AAAA;AAC5B;;AAEA,kBAAMC,UAAU;AAAA,uBAAKC,EAAEC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,EAAEG,KAAF,CAAQ,CAAR,CAAjC;AAAA,aAAhB;AACA,kBAAMC,UAAU;AAAA,uBAAKJ,EAAEC,MAAF,CAAS,CAAT,EAAYI,WAAZ,KAA4BL,EAAEG,KAAF,CAAQ,CAAR,CAAjC;AAAA,aAAhB;AACA,kBAAMG,eAAe;AAAA,uBAAKN,EAAEO,KAAF,CAAQ,GAAR,EAAaC,GAAb,CAAiB;AAAA,2BAAKJ,QAAQK,CAAR,CAAL;AAAA,iBAAjB,EAAkCC,IAAlC,CAAuC,EAAvC,CAAL;AAAA,aAArB;;AAEA,kBAAMC,cAAcL,aAAahB,KAAKsB,QAAL,CAAcf,IAAd,CAAb,CAApB;AACA,kBAAMgB,cAAcd,QAAQY,WAAR,CAApB;;AAEA,kBAAMG,MAAM;AACRC,wBAAS,GAAEJ,WAAY,QADf;AAERK,2BAAY,GAAEL,WAAY,WAFlB;AAGRM,yBAAU,GAAEJ,WAAY,SAHhB;AAIRhB,sBAAMgB;AAJE,aAAZ;;AAOA,kBAAMK;AAAA,6CAAS,WAAOC,MAAP,EAAeC,OAAf,EAA2B;AACtC,0BAAMC,QAAQjC,GAAGkC,YAAH,CAAgBhC,KAAKoB,IAAL,CAAUa,SAAV,EAAsB,GAAEJ,MAAO,MAA/B,CAAhB,EAAuDK,QAAvD,EAAd;AACA,0BAAMC,UAAUjC,SAAS0B,MAAT,CAAgBG,KAAhB,EAAuBP,GAAvB,CAAhB;AACA,0BAAM,MAAKnB,QAAL,CAAc+B,SAAd,CAAwBpC,KAAKoB,IAAL,CAAUb,IAAV,EAAiB,GAAEuB,OAAQ,EAA3B,CAAxB,EAAuDK,OAAvD,CAAN;AACH,iBAJK;;AAAA;AAAA;AAAA;AAAA,gBAAN;;AAMA,kBAAMP,OAAO,WAAP,EAAoB,WAApB,CAAN;AACA,kBAAMA,OAAO,eAAP,EAAwB,eAAxB,CAAN;AACA,kBAAMA,OAAO,cAAP,EAAuB,UAAvB,CAAN;AACA,kBAAMA,OAAO,YAAP,EAAqB,YAArB,CAAN;AA1B4B;AA2B/B;AAhCqB;;AAmC1BS,OAAOC,OAAP,GAAiBnC,mBAAjB","file":"index.js","sourcesContent":["'use strict'\n\nconst fs = require('fs')\nconst path = require('path')\nconst process = require('process')\nconst Mustache = require('mustache')\n\nclass ReactReduxGenerator {\n    constructor(operator) {\n        this.operator = operator\n    }\n\n    async generate(name, opts = {}) {\n        // FIXME: 'foo-bar'\n\n        const toLower = s => s.charAt(0).toLowerCase() + s.slice(1)\n        const toUpper = s => s.charAt(0).toUpperCase() + s.slice(1)\n        const createPrefix = s => s.split('-').map(v => toUpper(v)).join('')\n\n        const upperPrefix = createPrefix(path.basename(name))\n        const lowerPrefix = toLower(upperPrefix)\n\n        const obj = {\n            action: `${upperPrefix}Action`,\n            component: `${upperPrefix}Component`,\n            reducer: `${lowerPrefix}Reducer`,\n            name: lowerPrefix\n        }\n\n        const render = async (inFile, outFile) => {\n            const templ = fs.readFileSync(path.join(__dirname, `${inFile}.mst`)).toString()\n            const content = Mustache.render(templ, obj)\n            await this.operator.writeFile(path.join(name, `${outFile}`), content)\n        }\n\n        await render('action.js', 'action.js')\n        await render('component.jsx', 'component.jsx')\n        await render('container.js', 'index.js')\n        await render('reducer.js', 'reducer.js')\n    }\n}\n\nmodule.exports = ReactReduxGenerator\n"]}