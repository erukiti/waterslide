{"version":3,"sources":["../../../src/plugins/babel/installer.js"],"names":["BabelInstaller","operator","values","JSON","parse","readFileSync","presets","plugins","name","includes","push","getInstaller","jsInstaller","addDevPackage","addPreset","postInstall","writeFile","stringify","isRewritable","module","exports"],"mappings":"AAAA;;;;;;;;IAEMA,c;AACF,4BAAYC,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;;AAEA,aAAKC,MAAL,GAAcC,KAAKC,KAAL,CAAWH,SAASI,YAAT,CAAsB,UAAtB,CAAX,KAAiD,EAACC,SAAS,EAAV,EAAcC,SAAS,EAAvB,EAA/D;AACH;;;;kCAMSC,I,EAAM;AACZ,gBAAI,KAAKN,MAAL,CAAYI,OAAZ,CAAoBG,QAApB,CAA6BD,IAA7B,CAAJ,EAAwC;AACpC;AACH;;AAED,iBAAKN,MAAL,CAAYI,OAAZ,CAAoBI,IAApB,CAAyBF,IAAzB;AACH;;;kCAESA,I,EAAM;AACZ,gBAAI,KAAKN,MAAL,CAAYK,OAAZ,CAAoBE,QAApB,CAA6BD,IAA7B,CAAJ,EAAwC;AACpC;AACH;;AAED,iBAAKN,MAAL,CAAYK,OAAZ,CAAoBG,IAApB,CAAyBF,IAAzB;AACH;;;;;;;;;;;;;uCAG6B,KAAKP,QAAL,CAAcU,YAAd,CAA2B,IAA3B,C;;;AAApBC,2C;;AACNA,4CAAYC,aAAZ,CAA0B,YAA1B;AACAD,4CAAYC,aAAZ,CAA0B,cAA1B;AACAD,4CAAYC,aAAZ,CAA0B,kBAA1B;AACA,qCAAKC,SAAL,CAAe,KAAf;;AAEA,qCAAKb,QAAL,CAAcc,WAAd,2CAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAChB,MAAKd,QAAL,CAAce,SAAd,CAAwB,UAAxB,EAAuCb,KAAKc,SAAL,CAAe,MAAKf,MAApB,EAA4B,IAA5B,EAAkC,IAAlC,CAAvC,SAAoF,EAACgB,cAAc,IAAf,EAApF,CADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA1B;;;;;;;;;;;;;;;;;;qCA3BgBjB,Q,EAAU;AAC1B,mBAAO,IAAI,IAAJ,CAASA,QAAT,CAAP;AACH;;;;;;AA+BLkB,OAAOC,OAAP,GAAiBpB,cAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nclass BabelInstaller {\n    constructor(operator) {\n        this.operator = operator\n\n        this.values = JSON.parse(operator.readFileSync('.babelrc')) || {presets: [], plugins: []}\n    }\n\n    static getInstaller(operator) {\n        return new this(operator)\n    }\n\n    addPreset(name) {\n        if (this.values.presets.includes(name)) {\n            return\n        }\n\n        this.values.presets.push(name)\n    }\n\n    addPlugin(name) {\n        if (this.values.plugins.includes(name)) {\n            return\n        }\n\n        this.values.plugins.push(name)\n    }\n\n    async install() {\n        const jsInstaller = await this.operator.getInstaller('js')\n        jsInstaller.addDevPackage('babel-core')\n        jsInstaller.addDevPackage('babel-loader')\n        jsInstaller.addDevPackage('babel-preset-env')\n        this.addPreset('env')\n\n        this.operator.postInstall(async () => {\n            await this.operator.writeFile('.babelrc', `${JSON.stringify(this.values, null, '  ')}\\n`, {isRewritable: true})\n        })\n    }\n}\n\nmodule.exports = BabelInstaller\n"]}