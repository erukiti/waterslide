{"version":3,"sources":["../../../src/plugins/babel/installer.js"],"names":["BabelInstaller","constructor","operator","values","JSON","parse","readFileSync","presets","plugins","getInstaller","addPreset","name","includes","push","addPlugin","install","jsInstaller","addDevPackage","postInstall","writeFile","stringify","isRewritable","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,cAAN,CAAqB;AACjBC,gBAAYC,QAAZ,EAAsB;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;;AAEA,aAAKC,MAAL,GAAcC,KAAKC,KAAL,CAAWH,SAASI,YAAT,CAAsB,UAAtB,CAAX,KAAiD,EAACC,SAAS,EAAV,EAAcC,SAAS,EAAvB,EAA/D;AACH;;AAED,WAAOC,YAAP,CAAoBP,QAApB,EAA8B;AAC1B,eAAO,IAAI,IAAJ,CAASA,QAAT,CAAP;AACH;;AAEDQ,cAAUC,IAAV,EAAgB;AACZ,YAAI,KAAKR,MAAL,CAAYI,OAAZ,CAAoBK,QAApB,CAA6BD,IAA7B,CAAJ,EAAwC;AACpC;AACH;;AAED,aAAKR,MAAL,CAAYI,OAAZ,CAAoBM,IAApB,CAAyBF,IAAzB;AACH;;AAEDG,cAAUH,IAAV,EAAgB;AACZ,YAAI,KAAKR,MAAL,CAAYK,OAAZ,CAAoBI,QAApB,CAA6BD,IAA7B,CAAJ,EAAwC;AACpC;AACH;;AAED,aAAKR,MAAL,CAAYK,OAAZ,CAAoBK,IAApB,CAAyBF,IAAzB;AACH;;AAEKI,WAAN,GAAgB;AAAA;;AAAA;AACZ,kBAAMC,cAAc,MAAM,MAAKd,QAAL,CAAcO,YAAd,CAA2B,IAA3B,CAA1B;AACAO,wBAAYC,aAAZ,CAA0B,YAA1B;AACAD,wBAAYC,aAAZ,CAA0B,cAA1B;AACAD,wBAAYC,aAAZ,CAA0B,kBAA1B;AACA,kBAAKP,SAAL,CAAe,KAAf;;AAEA,kBAAKR,QAAL,CAAcgB,WAAd,mBAA0B,aAAY;AAClC,sBAAM,MAAKhB,QAAL,CAAciB,SAAd,CAAwB,UAAxB,EAAqC,GAAEf,KAAKgB,SAAL,CAAe,MAAKjB,MAApB,EAA4B,IAA5B,EAAkC,IAAlC,CAAwC,IAA/E,EAAoF,EAACkB,cAAc,IAAf,EAApF,CAAN;AACH,aAFD;AAPY;AAUf;AArCgB;;AAwCrBC,OAAOC,OAAP,GAAiBvB,cAAjB","file":"installer.js","sourcesContent":["'use strict'\n\nclass BabelInstaller {\n    constructor(operator) {\n        this.operator = operator\n\n        this.values = JSON.parse(operator.readFileSync('.babelrc')) || {presets: [], plugins: []}\n    }\n\n    static getInstaller(operator) {\n        return new this(operator)\n    }\n\n    addPreset(name) {\n        if (this.values.presets.includes(name)) {\n            return\n        }\n\n        this.values.presets.push(name)\n    }\n\n    addPlugin(name) {\n        if (this.values.plugins.includes(name)) {\n            return\n        }\n\n        this.values.plugins.push(name)\n    }\n\n    async install() {\n        const jsInstaller = await this.operator.getInstaller('js')\n        jsInstaller.addDevPackage('babel-core')\n        jsInstaller.addDevPackage('babel-loader')\n        jsInstaller.addDevPackage('babel-preset-env')\n        this.addPreset('env')\n\n        this.operator.postInstall(async () => {\n            await this.operator.writeFile('.babelrc', `${JSON.stringify(this.values, null, '  ')}\\n`, {isRewritable: true})\n        })\n    }\n}\n\nmodule.exports = BabelInstaller\n"]}