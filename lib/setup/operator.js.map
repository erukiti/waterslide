{"version":3,"sources":["../../src/setup/operator.js"],"names":["getConfig","Plugin","require","Setup","config","plugin","Operator","constructor","setup","getOpt","opt","getNoOpt","noOpt","getNoUse","noUse","getIsUse","isUse","getProjectDir","projectDir","addCommand","priority","command","setDirectory","directory","type","description","documentInstaller","getInstaller","directories","writeLocal","getGenerator","name","generators","Klass","requireGenerator","operator","replaceGenerator","generator","error","installers","klass","requireInstaller","installer","cliUtils","verbose","install","isInstalled","setTarget","target","addBuilder","builders","includes","push","addTester","testers","readFile","fsio","readFileSync","checkExists","writeFile","src","content","opts","opts2","Object","assign","entries","filter","entry","map","then","isWrote","message","postInstall","cb","postInstalls","setInfo","title","info","module","exports"],"mappings":"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","file":"operator.js","sourcesContent":["'use strict'\n// @flow\n\nconst {getConfig, Plugin} = require('../waterslide')\nconst Setup = require('./')\nimport type {Generator, Installer} from './'\n\nconst config = getConfig()\nconst plugin = new Plugin()\n\ntype InstallerFactory = {\n    getInstaller: (Operator) => ?Installer\n}\n\nclass Operator {\n    setup: Setup\n\n    constructor(setup: Setup) {\n        this.setup = setup\n    }\n\n    // FIXME\n    getOpt() {\n        return this.setup.opt\n    }\n\n    getNoOpt() {\n        return this.setup.noOpt\n    }\n\n    getNoUse() {\n        return this.setup.noUse\n    }\n\n    getIsUse() {\n        return this.setup.isUse\n    }\n\n    /**\n     * @returns {string}\n     */\n    getProjectDir() {\n        return this.setup.projectDir\n    }\n\n    /**\n     *\n     * @param {number} priority [0..9]\n     * @param {string} command\n     */\n    addCommand(priority: number, command: string) {\n        this.setup.command.addCommand(priority, command)\n    }\n\n\n    /**\n     *\n     * @param {string} directory\n     * @param {string} type\n     * @param {string} description\n     */\n    // FIXME\n    async setDirectory(directory: string, type: string, description: string) {\n        const documentInstaller = await this.getInstaller('document')\n        // console.dir(typeof documentInstaller.setDirectory)\n        // if (typeof documentInstaller.setDriectory !== 'function') {\n        //     throw Error()\n        // }\n\n        documentInstaller.setDirectory(directory, description)\n        if (type) {\n            this.setup.directories[type] = directory\n            config.writeLocal('directories', this.setup.directories)\n        }\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    getGenerator(name: string) {\n        if (!this.setup.generators[name]) {\n            const Klass = plugin.requireGenerator(name)\n            this.setup.generators[name] = new Klass(this.setup.operator)\n        }\n        return this.setup.generators[name]\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @param {Generator} generator\n     */\n    replaceGenerator(name: string, generator: Generator) {\n        if (this.setup.generators[name]) {\n            this.setup.operator.error(`${name} generator is already used.`)\n        } else {\n            this.setup.generators[name] = generator\n        }\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Installer}\n     */\n    async getInstaller(name: string) {\n        if (!this.setup.installers[name]) {\n            const klass: InstallerFactory = plugin.requireInstaller(name)\n            const installer = await klass.getInstaller(this.setup.operator)\n            if (!installer) {\n                this.setup.cliUtils.verbose(`${name} installer is ignored.`)\n\n                return {\n                    install: () => {}\n                }\n            }\n\n            this.setup.cliUtils.verbose(`installer: ${name}`, 1)\n            this.setup.installers[name] = installer\n        }\n\n        return this.setup.installers[name]\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    isInstalled(name: string) {\n        return this.setup.installers[name] !== null\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    setTarget(name: string) {\n        this.setup.target = name\n        config.writeLocal('target', this.setup.target)\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    addBuilder(name: string) {\n        if (this.setup.builders.includes(name)) {\n            return\n        }\n        this.setup.builders.push(name)\n        config.writeLocal('builders', this.setup.builders)\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    addTester(name: string, command: string) {\n        if (typeof this.setup.testers[name] === 'string') {\n            return\n        }\n\n        this.setup.testers[name] = command\n        config.writeLocal('testers', this.setup.testers)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Promise<Buffer>}\n     */\n    readFile(name: string) {\n        return this.setup.fsio.readFile(name)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Buffer}\n     */\n    readFileSync(name: string) {\n        return this.setup.fsio.readFileSync(name)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    checkExists(name: string) {\n        return this.setup.fsio.checkExists(name)\n    }\n\n    /**\n     *\n     * @param {string} src\n     * @param {string|Buffer} content\n     * @param {Object} opts\n     */\n    writeFile(src: string, content: string | Buffer, opts: Object = {}) {\n        if ('type' in opts) {\n            const opts2 = Object.assign({}, opts)\n            delete opts2.type\n            this.setup.entries.push({src, type: opts.type, opts})\n        } else {\n            this.setup.entries.push({src, opts})\n        }\n\n        config.writeLocal('entries', this.setup.entries.filter(entry => entry.opts && entry.opts.type).map(entry => {\n            const opts2 = Object.assign({}, entry.opts)\n            delete opts2.type\n            return {src: entry.src, type: entry.opts.type, opts: opts2}\n        }))\n\n        return this.setup.fsio.writeFile(src, content, opts).then(isWrote => {\n            if (isWrote) {\n                this.setup.cliUtils.message(`wrote ${src}`, 1)\n            }\n        })\n    }\n\n    /**\n     *\n     * @param {function} cb\n     */\n    postInstall(cb: () => void) {\n        this.setup.postInstalls.push(cb)\n    }\n\n    /**\n     *\n     * @param {string} title\n     * @param {string} message\n     */\n    setInfo(title: string, message: string) {\n        this.setup.info.push({title, message})\n        config.writeLocal('info', this.setup.info)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    verbose(message: string) {\n        this.setup.cliUtils.verbose(message, 1)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    message(message: string) {\n        this.setup.cliUtils.message(message, 1)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    error(message: string) {\n        this.setup.cliUtils.error(message, 1)\n    }\n}\n\nmodule.exports = Operator\n"]}