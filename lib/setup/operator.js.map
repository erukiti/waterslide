{"version":3,"sources":["../../src/setup/operator.js"],"names":["require","getConfig","Plugin","Setup","config","plugin","Operator","setup","opt","noOpt","noUse","projectDir","priority","command","addCommand","directory","type","description","getInstaller","documentInstaller","setDirectory","directories","writeLocal","name","generators","Klass","requireGenerator","operator","generator","error","installers","klass","requireInstaller","installer","cliUtils","verbose","install","target","builders","includes","push","testers","fsio","readFile","readFileSync","checkExists","src","content","opts","opts2","Object","assign","entries","filter","entry","map","writeFile","then","isWrote","message","cb","postInstalls","title","info","module","exports"],"mappings":"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","file":"operator.js","sourcesContent":["'use strict'\n// @flow\n\nconst {getConfig, Plugin} = require('../waterslide')\nconst Setup = require('./')\nimport type {Generator, Installer} from './'\n\nconst config = getConfig()\nconst plugin = new Plugin()\n\ntype InstallerFactory = {\n    getInstaller: (Operator) => ?Installer\n}\n\nclass Operator {\n    setup: Setup\n\n    constructor(setup: Setup) {\n        this.setup = setup\n    }\n\n    // FIXME\n    getOpt() {\n        return this.setup.opt\n    }\n\n    getNoOpt() {\n        return this.setup.noOpt\n    }\n\n    getNoUse() {\n        return this.setup.noUse\n    }\n\n    /**\n     * @returns {string}\n     */\n    getProjectDir() {\n        return this.setup.projectDir\n    }\n\n    /**\n     *\n     * @param {number} priority [0..9]\n     * @param {string} command\n     */\n    addCommand(priority: number, command: string) {\n        this.setup.command.addCommand(priority, command)\n    }\n\n\n    /**\n     *\n     * @param {string} directory\n     * @param {string} type\n     * @param {string} description\n     */\n    // FIXME\n    async setDirectory(directory: string, type: string, description: string) {\n        const documentInstaller = await this.getInstaller('document')\n        // console.dir(typeof documentInstaller.setDirectory)\n        // if (typeof documentInstaller.setDriectory !== 'function') {\n        //     throw Error()\n        // }\n\n        documentInstaller.setDirectory(directory, description)\n        if (type) {\n            this.setup.directories[type] = directory\n            config.writeLocal('directories', this.setup.directories)\n        }\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    getGenerator(name: string) {\n        if (!this.setup.generators[name]) {\n            const Klass = plugin.requireGenerator(name)\n            this.setup.generators[name] = new Klass(this.setup.operator)\n        }\n        return this.setup.generators[name]\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @param {Generator} generator\n     */\n    replaceGenerator(name: string, generator: Generator) {\n        if (this.setup.generators[name]) {\n            this.setup.operator.error(`${name} generator is already used.`)\n        } else {\n            this.setup.generators[name] = generator\n        }\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Installer}\n     */\n    async getInstaller(name: string) {\n        if (!this.setup.installers[name]) {\n            const klass: InstallerFactory = plugin.requireInstaller(name)\n            const installer = await klass.getInstaller(this.setup.operator)\n            if (!installer) {\n                this.setup.cliUtils.verbose(`${name} installer is ignored.`)\n\n                return {\n                    install: () => {}\n                }\n            }\n\n            this.setup.cliUtils.verbose(`installer: ${name}`, 1)\n            this.setup.installers[name] = installer\n        }\n\n        return this.setup.installers[name]\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    isInstalled(name: string) {\n        return this.setup.installers[name] !== null\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    setTarget(name: string) {\n        this.setup.target = name\n        config.writeLocal('target', this.setup.target)\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    addBuilder(name: string) {\n        if (this.setup.builders.includes(name)) {\n            return\n        }\n        this.setup.builders.push(name)\n        config.writeLocal('builders', this.setup.builders)\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    addTester(name: string) {\n        if (this.setup.testers.includes(name)) {\n            return\n        }\n\n        this.setup.testers.push(name)\n        config.writeLocal('testers', this.setup.testers)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Promise<Buffer>}\n     */\n    readFile(name: string) {\n        return this.setup.fsio.readFile(name)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Buffer}\n     */\n    readFileSync(name: string) {\n        return this.setup.fsio.readFileSync(name)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    checkExists(name: string) {\n        return this.setup.fsio.checkExists(name)\n    }\n\n    /**\n     *\n     * @param {string} src\n     * @param {string|Buffer} content\n     * @param {Object} opts\n     */\n    writeFile(src: string, content: string | Buffer, opts: Object = {}) {\n        if ('type' in opts) {\n            const opts2 = Object.assign({}, opts)\n            delete opts2.type\n            this.setup.entries.push({src, type: opts.type, opts})\n        } else {\n            this.setup.entries.push({src, opts})\n        }\n\n        config.writeLocal('entries', this.setup.entries.filter(entry => entry.opts && entry.opts.type).map(entry => {\n            const opts2 = Object.assign({}, entry.opts)\n            delete opts2.type\n            return {src: entry.src, type: entry.opts.type, opts: opts2}\n        }))\n\n        return this.setup.fsio.writeFile(src, content, opts).then(isWrote => {\n            if (isWrote) {\n                this.setup.cliUtils.message(`wrote ${src}`, 1)\n            }\n        })\n    }\n\n    /**\n     *\n     * @param {function} cb\n     */\n    postInstall(cb: () => void) {\n        this.setup.postInstalls.push(cb)\n    }\n\n    /**\n     *\n     * @param {string} title\n     * @param {string} message\n     */\n    setInfo(title: string, message: string) {\n        this.setup.info.push({title, message})\n        config.writeLocal('info', this.setup.info)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    verbose(message: string) {\n        this.setup.cliUtils.verbose(message, 1)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    message(message: string) {\n        this.setup.cliUtils.message(message, 1)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    error(message: string) {\n        this.setup.cliUtils.error(message, 1)\n    }\n}\n\nmodule.exports = Operator\n"]}