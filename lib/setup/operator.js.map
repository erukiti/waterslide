{"version":3,"sources":["../../src/setup/operator.js"],"names":["getConfig","Plugin","require","config","plugin","Operator","constructor","setup","getOpt","opt","getNoOpt","noOpt","getNoUse","noUse","getProjectDir","projectDir","addCommand","priority","command","setDirectory","directory","type","description","documentInstaller","operator","getInstaller","directories","writeLocal","getGenerator","name","generators","Generator","requireGenerator","replaceGenerator","generator","error","installers","klass","requireInstaller","installer","cliUtils","verbose","isInstalled","setFinalizer","finalizer","addBuilder","builders","includes","push","addTester","testers","readFile","fsio","readFileSync","checkExists","writeFile","content","opts","entries","path","text","filter","entry","map","then","isWrote","message","postInstall","cb","postInstalls","setInfo","title","info","module","exports"],"mappings":"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","file":"operator.js","sourcesContent":["'use strict'\n\nconst {getConfig, Plugin} = require('../waterslide')\n\nconst config = getConfig()\nconst plugin = new Plugin()\n\nclass Operator {\n    constructor(setup) {\n        this.setup = setup\n    }\n\n    // FIXME\n    getOpt() {\n        return this.setup.opt\n    }\n\n    getNoOpt() {\n        return this.setup.noOpt\n    }\n\n    getNoUse() {\n        return this.setup.noUse\n    }\n\n    /**\n     * @returns {string}\n     */\n    getProjectDir() {\n        return this.setup.projectDir\n    }\n\n    /**\n     *\n     * @param {number} priority [0..9]\n     * @param {string} command\n     */\n    addCommand(priority, command) {\n        this.setup.command.addCommand(priority, command)\n    }\n\n\n    /**\n     *\n     * @param {string} directory\n     * @param {string} type\n     * @param {string} description\n     */\n    // FIXME\n    async setDirectory(directory, type, description) {\n        const documentInstaller = await this.setup.operator.getInstaller('document')\n        documentInstaller.setDirectory(directory, description)\n        if (type) {\n            this.setup.directories[type] = directory\n            config.writeLocal('directories', this.setup.directories)\n        }\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    getGenerator(name) {\n        if (!this.setup.generators[name]) {\n            const Generator = plugin.requireGenerator(name)\n            this.setup.generators[name] = new Generator(this.setup.operator)\n        }\n        return this.setup.generators[name]\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @param {Generator} generator\n     */\n    replaceGenerator(name, generator) {\n        if (this.setup.generators[name]) {\n            this.setup.operator.error(`${name} generator is already used.`)\n        } else {\n            this.setup.generators[name] = generator\n        }\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Installer}\n     */\n    async getInstaller(name) {\n        if (!this.setup.installers[name]) {\n            const klass = plugin.requireInstaller(name)\n            const installer = await klass.getInstaller(this.setup.operator)\n            if (!installer) {\n                this.setup.cliUtils.verbose(`${name} installer is ignored.`)\n                return null\n            }\n\n            this.setup.cliUtils.verbose(`installer: ${name}`, 1)\n            this.setup.installers[name] = installer\n        }\n\n        return this.setup.installers[name]\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    isInstalled(name) {\n        return this.setup.installers[name] !== null\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    setFinalizer(name) {\n        this.setup.finalizer = name\n        config.writeLocal('finalizer', this.setup.finalizer)\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    addBuilder(name) {\n        if (this.setup.builders.includes(name)) {\n            return\n        }\n        this.setup.builders.push(name)\n        config.writeLocal('builders', this.setup.builders)\n    }\n\n    /**\n     *\n     * @param {string} name\n     */\n    addTester(name) {\n        if (this.setup.testers.includes(name)) {\n            return\n        }\n\n        this.setup.testers.push(name)\n        config.writeLocal('testers', this.setup.testers)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Promise<Buffer>}\n     */\n    readFile(name) {\n        return this.setup.fsio.readFile(name)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Buffer}\n     */\n    readFileSync(name) {\n        return this.setup.fsio.readFileSync(name)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    checkExists(name) {\n        return this.setup.fsio.checkExists(name)\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @param {string|Buffer} content\n     * @param {Object} opts\n     */\n    writeFile(name, content, opts = {}) {\n        this.setup.entries.push({path: name, text: content, opts})\n\n        config.writeLocal('entries', this.setup.entries.filter(entry => entry.opts && entry.opts.type).map(entry => {\n            return {path: entry.path, opts: entry.opts}\n        }))\n\n        return this.setup.fsio.writeFile(name, content, opts).then(isWrote => {\n            if (isWrote) {\n                this.setup.cliUtils.message(`wrote ${name}`, 1)\n            }\n        })\n    }\n\n    /**\n     *\n     * @param {function} cb\n     */\n    postInstall(cb) {\n        this.setup.postInstalls.push(cb)\n    }\n\n    /**\n     *\n     * @param {string} title\n     * @param {string} message\n     */\n    setInfo(title, message) {\n        this.setup.info.push({title, message})\n        config.writeLocal('info', this.setup.info)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    verbose(message) {\n        this.setup.cliUtils.verbose(message, 1)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    message(message) {\n        this.setup.cliUtils.message(message, 1)\n    }\n\n    /**\n     *\n     * @param {string} message\n     */\n    error(message) {\n        this.setup.cliUtils.error(message, 1)\n    }\n}\n\nmodule.exports = Operator\n"]}