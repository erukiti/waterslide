{"version":3,"sources":["../../src/cli/config.js"],"names":["config","require","Menu","createCharm","readPrompt","PassThrough","DummyInput","charm","input","prompt","Promise","resolve","reject","item","desc","err","result","writeGlobal","name","createMenu","items","menu","reset","cb","menuStream","createStream","passDataToMenu","write","data","forEach","label","add","close","workAround","process","stdin","on","pipe","stdout","end","setRawMode","resume","unpipe","removeListener","selectLicense","licenses","push","license","configurable","configMenu","getGlobal","exit","configLoop","catch","console","dir","e","configCommand","command","describe","builder","yargs","handler","argv","key","value","log","validKeys","map","includes","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAGA,IAAMA,SAASC,QAAQ,WAAR,CAAf;AACA,IAAMC,OAAOD,QAAQ,eAAR,CAAb;AACA,IAAME,cAAcF,QAAQ,OAAR,CAApB;AACA,IAAMG,aAAaH,QAAQ,MAAR,CAAnB;;eACsBA,QAAQ,QAAR,C;IAAfI,W,YAAAA,W;;IAQDC,U;;;;;;;;;;;kCACQ,CAAE;;;;EADSD,W;;AAIzB,IAAME,QAAQJ,YAAY,EAACK,OAAO,IAAIF,UAAJ,EAAR,EAAZ,CAAd;;AAEA,IAAMG,SAAS,SAATA,MAAS,OAAQ;AACnB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCR,mBAAW,EAACK,QAAQI,KAAKC,IAAd,EAAX,EAAgC,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC7C,gBAAID,GAAJ,EAAS;AACLH,uBAAOG,GAAP;AACH,aAFD,MAEO;AACHf,uBAAOiB,WAAP,CAAmBJ,KAAKK,IAAxB,EAA8BF,MAA9B;AACAL;AACH;AACJ,SAPD;AAQH,KATM,CAAP;AAUH,CAXD;;AAaA,IAAMQ,aAAa,SAAbA,UAAa,CAACC,KAAD,EAA4B;AAC3C,WAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAMS,OAAO,IAAInB,IAAJ,CAAS,EAACK,YAAD,EAAT,CAAb;AACAc,aAAKC,KAAL;;AAEA,YAAIC,KAAK,IAAT;;AAEA,YAAMC,aAAaH,KAAKI,YAAL,EAAnB;AACA,YAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,mBAAQF,WAAWG,KAAX,CAAiBC,IAAjB,CAAR;AAAA,SAAvB;;AAEAR,cAAMS,OAAN,CAAc,gBAAQ;AAClB,gBAAI,CAAChB,KAAKU,EAAV,EAAc;AACVF,qBAAKM,KAAL,CAAWd,KAAKiB,KAAhB;AACH,aAFD,MAEO;AACHT,qBAAKU,GAAL,CAASlB,KAAKiB,KAAd,EAAqB,YAAM;AACvBP,yBAAKV,KAAKU,EAAV;AACAF,yBAAKW,KAAL;AACH,iBAHD;AAIH;AACJ,SATD;;AAWA;AACA,YAAMC,aAAkBC,QAAQC,KAAhC;;AAEAD,gBAAQC,KAAR,CAAcC,EAAd,CAAiB,MAAjB,EAAyBV,cAAzB;AACAF,mBAAWa,IAAX,CAAgBH,QAAQI,MAAxB,EAAgC,EAACC,KAAK,KAAN,EAAhC;AACAN,mBAAWO,UAAX,CAAsB,IAAtB;AACAN,gBAAQC,KAAR,CAAcM,MAAd;;AAEApB,aAAKe,EAAL,CAAQ,OAAR,EAAiB,YAAM;AACnBZ,uBAAWkB,MAAX,CAAkBR,QAAQI,MAA1B;AACAJ,oBAAQC,KAAR,CAAcQ,cAAd,CAA6B,MAA7B,EAAqCjB,cAArC;AACAO,uBAAWO,UAAX,CAAsB,KAAtB;AACA7B,oBAAQY,EAAR;AACH,SALD;AAMH,KAlCM,CAAP;AAmCH,CApCD;;AAsCA,IAAMqB,gBAAgB,SAAhBA,aAAgB,OAAQ;AAC1B,QAAMC,WAAW,CACb,EAAC3B,MAAM,YAAP,EAAqBJ,MAAM,oBAA3B,EADa,EAEb,EAACI,MAAM,cAAP,EAAuBJ,MAAM,mCAA7B,EAFa,EAGb,EAACI,MAAM,cAAP,EAAuBJ,MAAM,wCAA7B,EAHa,EAIb,EAACI,MAAM,UAAP,EAAmBJ,MAAM,wCAAzB,EAJa,EAKb,EAACI,MAAM,SAAP,EAAkBJ,MAAM,sCAAxB,EALa,EAMb,EAACI,MAAM,SAAP,EAAkBJ,MAAM,sCAAxB,EANa,EAOb,EAACI,MAAM,UAAP,EAAmBJ,MAAM,4CAAzB,EAPa,EAQb,EAACI,MAAM,UAAP,EAAmBJ,MAAM,6CAAzB,EARa,EASb,EAACI,MAAM,UAAP,EAAmBJ,MAAM,6CAAzB,EATa,EAUb,EAACI,MAAM,KAAP,EAAcJ,MAAM,aAApB,EAVa,CAAjB;;AAaA,QAAMM,QAAyB,EAA/B;AACAA,UAAM0B,IAAN,CAAW,EAAChB,OAAO,wCAAR,EAAX;AACAe,aAAShB,OAAT,CAAiB,mBAAW;AACxBT,cAAM0B,IAAN,CAAW,EAAChB,OAAOiB,QAAQjC,IAAhB,EAAsBS,IAAI,cAAM;AACvCvB,uBAAOiB,WAAP,CAAmB,SAAnB,EAA8B8B,QAAQ7B,IAAtC;AACH,aAFU,EAAX;AAGH,KAJD;;AAMAE,UAAM0B,IAAN,CAAW,EAAChB,OAAO,IAAR,EAAX;AACAV,UAAM0B,IAAN,CAAW,EAAChB,OAAO,qBAAR,EAA+BP,IAAI,cAAM;AAChD,mBAAOd,OAAO,EAACS,MAAM,SAAP,EAAkBJ,MAAM,sDAAxB,EAAP,CAAP;AACH,SAFU,EAAX;;AAIAM,UAAM0B,IAAN,CAAW,EAAChB,OAAO,IAAR,EAAX;AACAV,UAAM0B,IAAN,CAAW,EAAChB,OAAO,MAAR,EAAgBP,IAAI,cAAM,CAAE,CAA5B,EAAX;AACA,WAAOJ,WAAWC,KAAX,CAAP;AACH,CA9BD;;AAgCA,IAAM4B,eAAe,CACjB,EAAC9B,MAAM,MAAP,EAAeJ,MAAM,kCAArB,EAAyDS,IAAId,MAA7D,EADiB,EAEjB,EAACS,MAAM,OAAP,EAAgBJ,MAAM,mCAAtB,EAA2DS,IAAId,MAA/D,EAFiB,EAGjB,EAACS,MAAM,UAAP,EAAmBJ,MAAM,0CAAzB,EAAqES,IAAId,MAAzE,EAHiB,EAIjB,EAACS,MAAM,SAAP,EAAkBJ,MAAM,iBAAxB,EAA2CS,IAAIqB,aAA/C,EAJiB,CAArB;;AAOA,IAAMK,aAAa,SAAbA,UAAa,GAAM;AACrB,QAAM7B,QAAyB,EAA/B;AACAA,UAAM0B,IAAN,CAAW,EAAChB,OAAO,qCAAR,EAAX;;AAEAkB,iBAAanB,OAAb,CAAqB,gBAAQ;AACzBT,cAAM0B,IAAN,CAAW,EAAChB,OAAUjB,KAAKK,IAAf,UAAwBlB,OAAOkD,SAAP,CAAiBrC,KAAKK,IAAtB,CAAzB,EAAwDK,IAAI;AAAA,uBAAMV,KAAKU,EAAL,CAAQV,IAAR,CAAN;AAAA,aAA5D,EAAX;AACH,KAFD;;AAIAO,UAAM0B,IAAN,CAAW,EAAChB,OAAO,IAAR,EAAX;AACAV,UAAM0B,IAAN,CAAW,EAAChB,OAAO,MAAR,EAAgBP,IAAI;AAAA,mBAAMW,QAAQiB,IAAR,CAAa,CAAb,CAAN;AAAA,SAApB,EAAX;;AAEA,WAAOhC,WAAWC,KAAX,CAAP;AACH,CAZD;;AAcA,IAAMgC;AAAA,yDAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACAH,aAAaI,KAAb,CAAmB;AAAA,mCAAKC,QAAQC,GAAR,CAAYC,CAAZ,CAAL;AAAA,yBAAnB,CADA;;AAAA;AACXjC,0BADW;;AAAA;AAAA,4BAGNA,EAHM;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAII0B,aAAaI,KAAb,CAAmB;AAAA,mCAAKC,QAAQC,GAAR,CAAYC,CAAZ,CAAL;AAAA,yBAAnB,CAJJ;;AAAA;AAIPjC,0BAJO;;AAAA;AAAA;AAAA,+BAMAA,IANA;;AAAA;AAMXA,0BANW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAWA,IAAMkC,gBAAgB,SAAhBA,aAAgB,GAAM;AACxB,WAAO;AACHC,iBAAS,sBADN;AAEHC,kBAAU,sBAFP;AAGHC,iBAAS,iBAACC,KAAD,EAAmB,CAE3B,CALE;AAMHC,iBAAS,iBAACC,IAAD,EAAkB;AACvB,gBAAI,CAACA,KAAKC,GAAN,IAAa,CAACD,KAAKE,KAAvB,EAA8B;AAC1Bb;AACA;AACH;;AAED,gBAAI,CAACW,KAAKE,KAAV,EAAiB;AACbX,wBAAQY,GAAR,CAAeH,KAAKC,GAApB,UAA4BhE,OAAOkD,SAAP,CAAiBa,KAAKC,GAAtB,CAA5B;AACA;AACH;;AAED,gBAAMG,YAAYnB,aAAaoB,GAAb,CAAiB;AAAA,uBAAQvD,KAAKK,IAAb;AAAA,aAAjB,CAAlB;;AAEA,gBAAIiD,UAAUE,QAAV,CAAmBN,KAAKC,GAAxB,CAAJ,EAAkC;AAC9BhE,uBAAOiB,WAAP,CAAmB8C,KAAKC,GAAxB,EAA6BD,KAAKE,KAAlC;AACH,aAFD,MAEO;AACHX,wBAAQY,GAAR,CAAY,aAAZ;AACH;AACJ;AAxBE,KAAP;AA0BH,CA3BD;;AA6BAI,OAAOC,OAAP,GAAiBd,aAAjB","file":"config.js","sourcesContent":["'use strict'\n// @flow\n\nconst config = require('../config')\nconst Menu = require('terminal-menu')\nconst createCharm = require('charm')\nconst readPrompt = require('read')\nconst {PassThrough} = require('stream')\n\n\ntype MenuItem = {\n    label: string,\n    cb?: () => any,\n}\n\nclass DummyInput extends PassThrough {\n    destroy() {}\n}\n\nconst charm = createCharm({input: new DummyInput()})\n\nconst prompt = item => {\n    return new Promise((resolve, reject) => {\n        readPrompt({prompt: item.desc}, (err, result) => {\n            if (err) {\n                reject(err)\n            } else {\n                config.writeGlobal(item.name, result)\n                resolve()\n            }\n        })\n    })\n}\n\nconst createMenu = (items: Array<MenuItem>) => {\n    return new Promise((resolve, reject) => {\n        const menu = new Menu({charm})\n        menu.reset()\n\n        let cb = null\n\n        const menuStream = menu.createStream()\n        const passDataToMenu = data => menuStream.write(data)\n\n        items.forEach(item => {\n            if (!item.cb) {\n                menu.write(item.label)\n            } else {\n                menu.add(item.label, () => {\n                    cb = item.cb\n                    menu.close()\n                })\n            }\n        })\n\n        // see. https://github.com/facebook/flow/issues/2944\n        const workAround: any = process.stdin\n\n        process.stdin.on('data', passDataToMenu)\n        menuStream.pipe(process.stdout, {end: false})\n        workAround.setRawMode(true)\n        process.stdin.resume()\n\n        menu.on('close', () => {\n            menuStream.unpipe(process.stdout)\n            process.stdin.removeListener('data', passDataToMenu)\n            workAround.setRawMode(false)\n            resolve(cb)\n        })\n    })\n}\n\nconst selectLicense = item => {\n    const licenses = [\n        {name: 'Apache-2.0', desc: 'Apache License 2.0'},\n        {name: 'BSD-2-Clause', desc: 'BSD 2-clause \"Simplified\" License'},\n        {name: 'BSD-3-Clause', desc: 'BSD 3-clause \"New\" or \"Revised License'},\n        {name: 'AGPL-3.0', desc: 'GNU Affero General Public License v3.0'},\n        {name: 'GPL-2.0', desc: 'GNU General Public License v2.0 only'},\n        {name: 'GPL-3.0', desc: 'GNU General Public License v3.0 only'},\n        {name: 'LGPL-2.0', desc: 'GNU Library General Public License v2 only'},\n        {name: 'LGPL-2.1', desc: 'GNU Lesser General Public License v2.1 only'},\n        {name: 'LGPL-3.0', desc: 'GNU Lesser General Public License v3.0 only'},\n        {name: 'MIT', desc: 'MIT License'},\n    ]\n\n    const items: Array<MenuItem> = []\n    items.push({label: 'Please select default your license\\n\\n'})\n    licenses.forEach(license => {\n        items.push({label: license.desc, cb: () => {\n            config.writeGlobal('license', license.name)\n        }})\n    })\n\n    items.push({label: '\\n'})\n    items.push({label: 'Input other license', cb: () => {\n        return prompt({name: 'license', desc: 'input license name (see. https://spdx.org/licenses/)'})\n    }})\n\n    items.push({label: '\\n'})\n    items.push({label: 'quit', cb: () => {}})\n    return createMenu(items)\n}\n\nconst configurable = [\n    {name: 'name', desc: 'your name (use author\\'s credit)', cb: prompt},\n    {name: 'email', desc: 'your email (use author\\'s credit)', cb: prompt},\n    {name: 'homepage', desc: 'your homepage url (use author\\'s credit)', cb: prompt},\n    {name: 'license', desc: 'default license', cb: selectLicense},\n]\n\nconst configMenu = () => {\n    const items: Array<MenuItem> = []\n    items.push({label: 'waterslide global configuration\\n\\n'})\n\n    configurable.forEach(item => {\n        items.push({label: `${item.name}: ${config.getGlobal(item.name)}`, cb: () => item.cb(item)})\n    })\n\n    items.push({label: '\\n'})\n    items.push({label: 'exit', cb: () => process.exit(0)})\n\n    return createMenu(items)\n}\n\nconst configLoop = async () => {\n    let cb = await configMenu().catch(e => console.dir(e))\n    for (;;) {\n        if (!cb) {\n            cb = await configMenu().catch(e => console.dir(e))\n        }\n        cb = await cb()\n    }\n}\n\n\nconst configCommand = () => {\n    return {\n        command: 'config [key] [value]',\n        describe: 'global configuration',\n        builder: (yargs: Object) => {\n\n        },\n        handler: (argv: Object) => {\n            if (!argv.key && !argv.value) {\n                configLoop()\n                return\n            }\n\n            if (!argv.value) {\n                console.log(`${argv.key}: ${config.getGlobal(argv.key)}`)\n                return\n            }\n\n            const validKeys = configurable.map(item => item.name)\n\n            if (validKeys.includes(argv.key)) {\n                config.writeGlobal(argv.key, argv.value)\n            } else {\n                console.log('invalid key')\n            }\n        }\n    }\n}\n\nmodule.exports = configCommand\n"]}