{"version":3,"sources":["../../src/cli/install.js"],"names":["generateName","require","process","path","fs","Setup","Plugin","config","CliUtils","install","cliUtils","argv","startLocal","setup","parseOpt","name","setOpt","setNoOpt","pluginNames","installer","operator","getInstaller","error","catch","console","dir","e","message","installCommand","command","describe","builder","yargs","option","type","handler","isExists","log","exit","verbose","debug","module","exports"],"mappings":"AAAA;;;;AAGA,MAAMA,eAAeC,QAAQ,WAAR,CAArB;AACA,MAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,MAAMG,KAAKH,QAAQ,IAAR,CAAX;;AAEA,MAAMI,QAAQJ,QAAQ,UAAR,CAAd;AACA,MAAMK,SAASL,QAAQ,WAAR,CAAf;AACA,MAAMM,SAASN,QAAQ,WAAR,CAAf;AACA,MAAMO,WAAWP,QAAQ,SAAR,CAAjB;;AAEA,MAAMQ;AAAA,iCAAU,WAAOC,QAAP,EAA2BC,IAA3B,EAAoC;AAChDJ,eAAOK,UAAP;;AAEA,cAAMC,QAAQ,IAAIR,KAAJ,CAAUK,QAAV,CAAd;;AAEA,cAAMI,WAAW,gBAAQ;AACrB,gBAAI,CAACH,KAAKI,IAAL,CAAL,EAAiB;AACb,uBAAO,EAAP;AACH,aAFD,MAEO,IAAI,OAAOJ,KAAKI,IAAL,CAAP,KAAsB,QAA1B,EAAoC;AACvC,uBAAO,CAACJ,KAAKI,IAAL,CAAD,CAAP;AACH,aAFM,MAEA;AACH,uBAAOJ,KAAKI,IAAL,CAAP;AACH;AACJ,SARD;;AAUAF,cAAMG,MAAN,CAAaF,SAAS,KAAT,CAAb;AACAD,cAAMI,QAAN,CAAeH,SAAS,OAAT,CAAf;;AAEA,aAAK,IAAIC,IAAT,IAAiBJ,KAAKO,WAAtB,EAAmC;AAC/B,kBAAMC,YAAY,MAAMN,MAAMO,QAAN,CAAeC,YAAf,CAA4BN,IAA5B,CAAxB;AACA,gBAAI,CAACI,SAAL,EAAgB;AACZT,yBAASY,KAAT,CAAgB,GAAEP,IAAK,4EAAvB;AACH;AACJ;;AAED,cAAMF,MAAMJ,OAAN,GAAgBc,KAAhB,CAAsB;AAAA,mBAAKC,QAAQC,GAAR,CAAYC,CAAZ,CAAL;AAAA,SAAtB,CAAN;AACAhB,iBAASiB,OAAT,CAAiB,iBAAjB;AACH,KA3BK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AA6BA,MAAMC,iBAAiB,MAAM;AACzB,WAAO;AACHC,iBAAS,oCADN;AAEHC,kBAAU,oBAFP;AAGHC,iBAAUC,KAAD,IAAmB;AACxBA,kBACKC,MADL,CACY,KADZ,EACmB;AACXH,0BAAU,YADC;AAEXI,sBAAM;AAFK,aADnB,EAKKD,MALL,CAKY,QALZ,EAKsB;AACdH,0BAAU,gBADI;AAEdI,sBAAM;AAFQ,aALtB;AASH,SAbE;AAcHC,iBAAUxB,IAAD,IAAkB;AACvB,gBAAI,CAACJ,OAAO6B,QAAP,EAAL,EAAwB;AACpBZ,wBAAQa,GAAR,CAAY,sDAAZ;AACAnC,wBAAQoC,IAAR,CAAa,CAAb;AACH;;AAED,kBAAM5B,WAAW,IAAIF,QAAJ,CAAa,EAAC+B,SAAS5B,KAAK4B,OAAf,EAAwBC,OAAO7B,KAAK6B,KAApC,EAAb,CAAjB;AACA/B,oBAAQC,QAAR,EAAkBC,IAAlB,EAAwBY,KAAxB,CAA8BG,KAAKF,QAAQC,GAAR,CAAYC,CAAZ,CAAnC;AACH;AAtBE,KAAP;AAwBH,CAzBD;;AA2BAe,OAAOC,OAAP,GAAiBd,cAAjB","file":"install.js","sourcesContent":["'use strict'\n// @flow\n\nconst generateName = require('sillyname')\nconst process = require('process')\nconst path = require('path')\nconst fs = require('fs')\n\nconst Setup = require('../setup')\nconst Plugin = require('../plugin')\nconst config = require('../config')\nconst CliUtils = require('./utils')\n\nconst install = async (cliUtils: CliUtils, argv) => {\n    config.startLocal()\n\n    const setup = new Setup(cliUtils)\n\n    const parseOpt = name => {\n        if (!argv[name]) {\n            return []\n        } else if (typeof argv[name] === 'string') {\n            return [argv[name]]\n        } else {\n            return argv[name]\n        }\n    }\n\n    setup.setOpt(parseOpt('opt'))\n    setup.setNoOpt(parseOpt('noOpt'))\n\n    for (let name of argv.pluginNames) {\n        const installer = await setup.operator.getInstaller(name)\n        if (!installer) {\n            cliUtils.error(`${name} is not installed. already installed or installing file is already exists.`)\n        }\n    }\n\n    await setup.install().catch(e => console.dir(e))\n    cliUtils.message('install finish.')\n}\n\nconst installCommand = () => {\n    return {\n        command: 'install [options] <pluginNames...>',\n        describe: 'install to project',\n        builder: (yargs: Object) => {\n            yargs\n                .option('opt', {\n                    describe: 'set option',\n                    type: 'string'\n                })\n                .option('no-opt', {\n                    describe: 'disable option',\n                    type: 'string'\n                })\n        },\n        handler: (argv: Object) => {\n            if (!config.isExists()) {\n                console.log('If you want to install, you need to setup waterslide')\n                process.exit(1)\n            }\n\n            const cliUtils = new CliUtils({verbose: argv.verbose, debug: argv.debug})\n            install(cliUtils, argv).catch(e => console.dir(e))\n        }\n    }\n}\n\nmodule.exports = installCommand\n"]}