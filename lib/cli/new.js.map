{"version":3,"sources":["../../src/cli/new.js"],"names":["generateName","require","process","path","fs","Setup","Plugin","config","CliUtils","setupProject","cliUtils","argv","projectType","message","projectDir","projectName","indexOf","error","exit","mkdirSync","chdir","startLocal","toLowerCase","replace","writeLocal","setup","setProjectDir","parseOpt","name","noUse","setNoUse","setOpt","setNoOpt","envs","filter","includes","v","operator","getNoOpt","forEach","push","plugin","Klass","requireProject","obj","getInstaller","install","catch","console","dir","e","newCommand","command","describe","builder","yargs","option","type","handler","verbose","debug","module","exports"],"mappings":"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","file":"new.js","sourcesContent":["'use strict'\n\nconst generateName = require('sillyname')\nconst process = require('process')\nconst path = require('path')\nconst fs = require('fs')\n\nconst Setup = require('../setup')\nconst Plugin = require('../plugin')\nconst config = require('../config')\nconst CliUtils = require('./utils')\n\nconst setupProject = async (cliUtils, argv) => {\n    const projectType = argv.projectType\n\n    cliUtils.message(`create a new project of ${projectType}`)\n\n    let projectDir = null\n    let projectName = null\n\n    if (argv.projectDir) {\n        projectDir = argv.projectDir\n        if (projectDir.indexOf('/') !== -1 || projectDir === '.' || projectDir === '..') {\n            cliUtils.error('invalid projectDir.')\n            process.exit(1)\n        }\n\n        projectName = projectDir\n        fs.mkdirSync(projectDir)\n        process.chdir(projectDir)\n        config.startLocal()\n    } else {\n        projectName = generateName()\n        projectDir = projectName.toLowerCase().replace(' ', '-')\n        fs.mkdirSync(projectDir)\n        cliUtils.message(`directory \\x1b[32m${projectDir}\\x1b[m was created.`)\n        process.chdir(projectDir)\n        config.startLocal()\n        config.writeLocal('sillyname', projectDir)\n    }\n\n    const setup = new Setup(cliUtils)\n    setup.setProjectDir(projectDir)\n\n    const parseOpt = name => {\n        if (!argv[name]) {\n            return []\n        } else if (typeof argv[name] === 'string') {\n            return [argv[name]]\n        } else {\n            return argv[name]\n        }\n    }\n\n    const noUse = parseOpt('noUse')\n    setup.setNoUse(noUse)\n\n    setup.setOpt(parseOpt('opt'))\n    setup.setNoOpt(parseOpt('noOpt'))\n\n    const envs = parseOpt('use').filter(v => !noUse.includes(v))\n\n    if (!setup.operator.getNoOpt().includes('recommend')) {\n        ['editorconfig', 'git'].filter(v => !noUse.includes(v)).forEach(v => {\n            envs.push(v)\n        })\n    }\n\n    const plugin = new Plugin()\n    const Klass = plugin.requireProject(projectType)\n    const obj = new Klass(setup.operator)\n\n    for (let name of envs) {\n        await setup.operator.getInstaller(name)\n    }\n\n    await obj.install()\n\n    await setup.install().catch(e => console.dir(e))\n\n    cliUtils.message()\n    cliUtils.message(`  project \\x1b[32m${projectDir}\\x1b[m was created.`)\n    cliUtils.message(`  see. \\x1b[36m${projectDir}/README.md\\x1b[m`)\n}\n\nconst newCommand = () => {\n    return {\n        command: 'new <projectType> [projectDir]',\n        describe: 'create a new project',\n        builder: yargs => {\n            yargs\n                .option('use', {\n                    describe: 'use install plugin',\n                    type: 'string'\n                })\n                .option('no-use', {\n                    describe: 'disable install plugin',\n                    type: 'string'\n                })\n                .option('opt', {\n                    describe: 'set option',\n                    type: 'string'\n                })\n                .option('no-opt', {\n                    describe: 'disable option',\n                    type: 'string'\n                })\n        },\n        handler: argv => {\n            const cliUtils = new CliUtils({verbose: argv.verbose, debug: argv.debug})\n            setupProject(cliUtils, argv).catch(e => console.dir(e))\n        }\n    }\n}\n\nmodule.exports = newCommand\n"]}