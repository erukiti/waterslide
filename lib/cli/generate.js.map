{"version":3,"sources":["../../src/cli/generate.js"],"names":["process","require","path","fs","Setup","Plugin","config","CliUtils","generate","cliUtils","argv","startLocal","setup","parseOpt","name","setOpt","setNoOpt","operator","getGenerator","generatorName","args","install","catch","console","dir","e","message","generateCommand","command","describe","builder","yargs","option","type","handler","isExists","log","exit","verbose","debug","module","exports"],"mappings":"AAAA;;;;AAGA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,KAAKF,QAAQ,IAAR,CAAX;;AAEA,IAAMG,QAAQH,QAAQ,UAAR,CAAd;AACA,IAAMI,SAASJ,QAAQ,WAAR,CAAf;AACA,IAAMK,SAASL,QAAQ,WAAR,CAAf;AACA,IAAMM,WAAWN,QAAQ,SAAR,CAAjB;;AAEA,IAAMO;AAAA,yDAAW,iBAAOC,QAAP,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbJ,+BAAOK,UAAP;;AAEMC,6BAHO,GAGC,IAAIR,KAAJ,CAAUK,QAAV,CAHD;;AAKPI,gCALO,GAKI,SAAXA,QAAW,OAAQ;AACrB,gCAAI,CAACH,KAAKI,IAAL,CAAL,EAAiB;AACb,uCAAO,EAAP;AACH,6BAFD,MAEO,IAAI,OAAOJ,KAAKI,IAAL,CAAP,KAAsB,QAA1B,EAAoC;AACvC,uCAAO,CAACJ,KAAKI,IAAL,CAAD,CAAP;AACH,6BAFM,MAEA;AACH,uCAAOJ,KAAKI,IAAL,CAAP;AACH;AACJ,yBAbY;;AAebF,8BAAMG,MAAN,CAAaF,SAAS,KAAT,CAAb;AACAD,8BAAMI,QAAN,CAAeH,SAAS,OAAT,CAAf;;AAhBa;AAAA,+BAkBPD,MAAMK,QAAN,CAAeC,YAAf,CAA4BR,KAAKS,aAAjC,EAAgDX,QAAhD,CAAyDE,KAAKU,IAAL,CAAU,CAAV,CAAzD,CAlBO;;AAAA;AAAA;AAAA,+BAoBPR,MAAMS,OAAN,GAAgBC,KAAhB,CAAsB;AAAA,mCAAKC,QAAQC,GAAR,CAAYC,CAAZ,CAAL;AAAA,yBAAtB,CApBO;;AAAA;AAqBbhB,iCAASiB,OAAT,CAAiB,kBAAjB;;AArBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAwBA,IAAMC,kBAAkB,SAAlBA,eAAkB,GAAM;AAC1B,WAAO;AACHC,iBAAS,8CADN;AAEHC,kBAAU,eAFP;AAGHC,iBAAS,iBAACC,KAAD,EAAmB;AACxBA,kBACKC,MADL,CACY,KADZ,EACmB;AACXH,0BAAU,YADC;AAEXI,sBAAM;AAFK,aADnB,EAKKD,MALL,CAKY,QALZ,EAKsB;AACdH,0BAAU,gBADI;AAEdI,sBAAM;AAFQ,aALtB;AASH,SAbE;AAcHC,iBAAS,iBAACxB,IAAD,EAAkB;AACvB,gBAAI,CAACJ,OAAO6B,QAAP,EAAL,EAAwB;AACpBZ,wBAAQa,GAAR,CAAY,4DAAZ;AACApC,wBAAQqC,IAAR,CAAa,CAAb;AACH;;AAED,gBAAM5B,WAAW,IAAIF,QAAJ,CAAa,EAAC+B,SAAS5B,KAAK4B,OAAf,EAAwBC,OAAO7B,KAAK6B,KAApC,EAAb,CAAjB;AACA/B,qBAASC,QAAT,EAAmBC,IAAnB,EAAyBY,KAAzB,CAA+B;AAAA,uBAAKC,QAAQC,GAAR,CAAYC,CAAZ,CAAL;AAAA,aAA/B;AACH;AAtBE,KAAP;AAwBH,CAzBD;;AA2BAe,OAAOC,OAAP,GAAiBd,eAAjB","file":"generate.js","sourcesContent":["'use strict'\n// @flow\n\nconst process = require('process')\nconst path = require('path')\nconst fs = require('fs')\n\nconst Setup = require('../setup')\nconst Plugin = require('../plugin')\nconst config = require('../config')\nconst CliUtils = require('./utils')\n\nconst generate = async (cliUtils, argv) => {\n    config.startLocal()\n\n    const setup = new Setup(cliUtils)\n\n    const parseOpt = name => {\n        if (!argv[name]) {\n            return []\n        } else if (typeof argv[name] === 'string') {\n            return [argv[name]]\n        } else {\n            return argv[name]\n        }\n    }\n\n    setup.setOpt(parseOpt('opt'))\n    setup.setNoOpt(parseOpt('noOpt'))\n\n    await setup.operator.getGenerator(argv.generatorName).generate(argv.args[0])\n\n    await setup.install().catch(e => console.dir(e))\n    cliUtils.message('generate finish.')\n}\n\nconst generateCommand = () => {\n    return {\n        command: 'generate [options] <generatorName> <args...>',\n        describe: 'generate file',\n        builder: (yargs: Object) => {\n            yargs\n                .option('opt', {\n                    describe: 'set option',\n                    type: 'string'\n                })\n                .option('no-opt', {\n                    describe: 'disable option',\n                    type: 'string'\n                })\n        },\n        handler: (argv: Object) => {\n            if (!config.isExists()) {\n                console.log('If you want to generate file, you need to setup waterslide')\n                process.exit(1)\n            }\n\n            const cliUtils = new CliUtils({verbose: argv.verbose, debug: argv.debug})\n            generate(cliUtils, argv).catch(e => console.dir(e))\n        }\n    }\n}\n\nmodule.exports = generateCommand\n"]}