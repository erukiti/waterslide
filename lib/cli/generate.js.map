{"version":3,"sources":["../../src/cli/generate.js"],"names":["process","require","path","fs","Setup","Plugin","config","CliUtils","generate","cliUtils","argv","startLocal","setup","parseOpt","name","setOpt","setNoOpt","operator","getGenerator","generatorName","args","install","catch","console","dir","e","message","generateCommand","command","describe","builder","yargs","option","type","handler","isExists","log","exit","verbose","debug","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,KAAKF,QAAQ,IAAR,CAAX;;AAEA,MAAMG,QAAQH,QAAQ,UAAR,CAAd;AACA,MAAMI,SAASJ,QAAQ,WAAR,CAAf;AACA,MAAMK,SAASL,QAAQ,WAAR,CAAf;AACA,MAAMM,WAAWN,QAAQ,SAAR,CAAjB;;AAEA,MAAMO;AAAA,iCAAW,WAAOC,QAAP,EAAiBC,IAAjB,EAA0B;AACvCJ,eAAOK,UAAP;;AAEA,cAAMC,QAAQ,IAAIR,KAAJ,CAAUK,QAAV,CAAd;;AAEA,cAAMI,WAAW,gBAAQ;AACrB,gBAAI,CAACH,KAAKI,IAAL,CAAL,EAAiB;AACb,uBAAO,EAAP;AACH,aAFD,MAEO,IAAI,OAAOJ,KAAKI,IAAL,CAAP,KAAsB,QAA1B,EAAoC;AACvC,uBAAO,CAACJ,KAAKI,IAAL,CAAD,CAAP;AACH,aAFM,MAEA;AACH,uBAAOJ,KAAKI,IAAL,CAAP;AACH;AACJ,SARD;;AAUAF,cAAMG,MAAN,CAAaF,SAAS,KAAT,CAAb;AACAD,cAAMI,QAAN,CAAeH,SAAS,OAAT,CAAf;;AAEA,cAAMD,MAAMK,QAAN,CAAeC,YAAf,CAA4BR,KAAKS,aAAjC,EAAgDX,QAAhD,CAAyDE,KAAKU,IAAL,CAAU,CAAV,CAAzD,CAAN;;AAEA,cAAMR,MAAMS,OAAN,GAAgBC,KAAhB,CAAsB;AAAA,mBAAKC,QAAQC,GAAR,CAAYC,CAAZ,CAAL;AAAA,SAAtB,CAAN;AACAhB,iBAASiB,OAAT,CAAiB,kBAAjB;AACH,KAtBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAwBA,MAAMC,kBAAkB,MAAM;AAC1B,WAAO;AACHC,iBAAS,8CADN;AAEHC,kBAAU,eAFP;AAGHC,iBAASC,SAAS;AACdA,kBACKC,MADL,CACY,KADZ,EACmB;AACXH,0BAAU,YADC;AAEXI,sBAAM;AAFK,aADnB,EAKKD,MALL,CAKY,QALZ,EAKsB;AACdH,0BAAU,gBADI;AAEdI,sBAAM;AAFQ,aALtB;AASH,SAbE;AAcHC,iBAASxB,QAAQ;AACb,gBAAI,CAACJ,OAAO6B,QAAP,EAAL,EAAwB;AACpBZ,wBAAQa,GAAR,CAAY,4DAAZ;AACApC,wBAAQqC,IAAR,CAAa,CAAb;AACH;;AAED,kBAAM5B,WAAW,IAAIF,QAAJ,CAAa,EAAC+B,SAAS5B,KAAK4B,OAAf,EAAwBC,OAAO7B,KAAK6B,KAApC,EAAb,CAAjB;AACA/B,qBAASC,QAAT,EAAmBC,IAAnB,EAAyBY,KAAzB,CAA+BG,KAAKF,QAAQC,GAAR,CAAYC,CAAZ,CAApC;AACH;AAtBE,KAAP;AAwBH,CAzBD;;AA2BAe,OAAOC,OAAP,GAAiBd,eAAjB","file":"generate.js","sourcesContent":["'use strict'\n\nconst process = require('process')\nconst path = require('path')\nconst fs = require('fs')\n\nconst Setup = require('../setup')\nconst Plugin = require('../plugin')\nconst config = require('../config')\nconst CliUtils = require('./utils')\n\nconst generate = async (cliUtils, argv) => {\n    config.startLocal()\n\n    const setup = new Setup(cliUtils)\n\n    const parseOpt = name => {\n        if (!argv[name]) {\n            return []\n        } else if (typeof argv[name] === 'string') {\n            return [argv[name]]\n        } else {\n            return argv[name]\n        }\n    }\n\n    setup.setOpt(parseOpt('opt'))\n    setup.setNoOpt(parseOpt('noOpt'))\n\n    await setup.operator.getGenerator(argv.generatorName).generate(argv.args[0])\n\n    await setup.install().catch(e => console.dir(e))\n    cliUtils.message('generate finish.')\n}\n\nconst generateCommand = () => {\n    return {\n        command: 'generate [options] <generatorName> <args...>',\n        describe: 'generate file',\n        builder: yargs => {\n            yargs\n                .option('opt', {\n                    describe: 'set option',\n                    type: 'string'\n                })\n                .option('no-opt', {\n                    describe: 'disable option',\n                    type: 'string'\n                })\n        },\n        handler: argv => {\n            if (!config.isExists()) {\n                console.log('If you want to generate file, you need to setup waterslide')\n                process.exit(1)\n            }\n\n            const cliUtils = new CliUtils({verbose: argv.verbose, debug: argv.debug})\n            generate(cliUtils, argv).catch(e => console.dir(e))\n        }\n    }\n}\n\nmodule.exports = generateCommand\n"]}